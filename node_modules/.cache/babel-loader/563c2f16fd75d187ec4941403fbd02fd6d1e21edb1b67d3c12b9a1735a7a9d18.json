{"ast":null,"code":"var _jsxFileName = \"/home/kipngenoh/Desktop/CODING SOLUTIONS/REACT_PROJECTS/lyms-microfinance/src/pages/LoanApplication.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import { Tooltip, Button, Modal } from 'react-bootstrap';\n// import { AiOutlineInfoCircle } from 'react-icons/ai'; // Add icon for loan type\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const LoanApplication = () => {\n//   const [searchParams] = useSearchParams();\n//   const loanType = searchParams.get('type') || 'salary'; // Default to 'salary' if not specified\n\n//   const [loanBreakdown, setLoanBreakdown] = useState({\n//     totalInterest: 0,\n//     totalPayable: 0,\n//     weeklyInstallment: 0,\n//   });\n\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Formik setup for form validation\n//   const formik = useFormik({\n//     initialValues: {\n//       fullName: '',\n//       phoneNumber: '',\n//       idNumber: '',\n//       loanAmount: '',\n//       loanDuration: 5, // Default duration in weeks\n//       payslips: null,\n//       bankStatement: null,\n//       businessCertificate: null,\n//     },\n//     validationSchema: Yup.object({\n//       fullName: Yup.string().required('Full name is required'),\n//       phoneNumber: Yup.string().required('Phone number is required'),\n//       idNumber: Yup.string().required('ID number is required'),\n//       loanAmount: Yup.number()\n//         .min(500, 'Minimum loan amount is 500 KES')\n//         .required('Loan amount is required'),\n//       loanDuration: Yup.number()\n//         .min(1, 'Minimum duration is 1 week')\n//         .max(5, 'Maximum duration is 5 weeks')\n//         .required('Loan duration is required'),\n//     }),\n//     onSubmit: (values) => {\n//       console.log('Form Submitted:', values);\n//       alert('Your application has been successfully submitted!');\n//     },\n//   });\n\n//   // Calculate loan breakdown (interest, total repayable, weekly installment)\n//   const calculateLoanBreakdown = () => {\n//     const amount = parseFloat(formik.values.loanAmount || 0);\n//     const duration = parseInt(formik.values.loanDuration || 1, 10);\n//     const weeklyInterestRate = 0.05; // 5% weekly interest rate\n\n//     const totalInterest = amount * weeklyInterestRate * duration;\n//     const totalPayable = amount + totalInterest;\n//     const weeklyInstallment = totalPayable / duration;\n\n//     setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n//   };\n\n//   useEffect(() => {\n//     calculateLoanBreakdown(); // Recalculate breakdown when form values change\n//   }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n//   // Function to handle document preview\n//   const handleFileUpload = (e, fieldName) => {\n//     const file = e.target.files[0];\n//     formik.setFieldValue(fieldName, file);\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Loan Application</h2>\n//       <p>Apply for a {loanType === 'salary' ? 'Salary Loan' : 'Business Loan'}.</p>\n\n//       <form onSubmit={formik.handleSubmit} className=\"mt-4\">\n//         {/* Full Name */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"fullName\" className=\"form-label\">Full Name</label>\n//           <input\n//             id=\"fullName\"\n//             name=\"fullName\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.fullName}\n//           />\n//           {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n//         </div>\n\n//         {/* Phone Number */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"phoneNumber\" className=\"form-label\">Phone Number</label>\n//           <input\n//             id=\"phoneNumber\"\n//             name=\"phoneNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.phoneNumber}\n//           />\n//           {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n//         </div>\n\n//         {/* National ID / Passport */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"idNumber\" className=\"form-label\">National ID/Passport</label>\n//           <input\n//             id=\"idNumber\"\n//             name=\"idNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.idNumber}\n//           />\n//           {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n//         </div>\n\n//         {/* Loan Amount */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanAmount\" className=\"form-label\">Loan Amount</label>\n//           <input\n//             id=\"loanAmount\"\n//             name=\"loanAmount\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanAmount}\n//           />\n//           {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n//         </div>\n\n//         {/* Loan Duration */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanDuration\" className=\"form-label\">Loan Duration (in weeks)</label>\n//           <input\n//             id=\"loanDuration\"\n//             name=\"loanDuration\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanDuration}\n//           />\n//           {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n//         </div>\n\n//         {/* Conditional File Uploads */}\n//         {loanType === 'salary' && (\n//           <>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"payslips\" className=\"form-label\">Upload Payslips</label>\n//               <input\n//                 id=\"payslips\"\n//                 name=\"payslips\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => handleFileUpload(e, 'payslips')}\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"bankStatement\" className=\"form-label\">Upload Bank Statement</label>\n//               <input\n//                 id=\"bankStatement\"\n//                 name=\"bankStatement\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => handleFileUpload(e, 'bankStatement')}\n//               />\n//             </div>\n//           </>\n//         )}\n\n//         {loanType === 'business' && (\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"businessCertificate\" className=\"form-label\">Business Registration Certificate</label>\n//             <input\n//               id=\"businessCertificate\"\n//               name=\"businessCertificate\"\n//               type=\"file\"\n//               className=\"form-control\"\n//               onChange={(e) => handleFileUpload(e, 'businessCertificate')}\n//             />\n//           </div>\n//         )}\n\n//         {/* Loan Breakdown */}\n//         <h4 className=\"mt-4\">Loan Breakdown</h4>\n//         <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n//         <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n//         <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n//         {/* Submit Button */}\n//         <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit Application</button>\n\n//         {/* Tooltip Info for Loan Type */}\n//         <div className=\"mt-3\">\n//           <Tooltip placement=\"top\" title=\"Choose the loan type depending on your application\">\n//             <AiOutlineInfoCircle size={25} />\n//           </Tooltip>\n//         </div>\n//       </form>\n\n//       {/* Modal for Terms & Conditions */}\n//       <Modal show={showModal} onHide={() => setShowModal(false)}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>Loan Terms & Conditions</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>\n//           <p>By applying for this loan, you agree to our terms and conditions...</p>\n//           {/* Add your actual terms here */}\n//         </Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n//             Close\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </div>\n//   );\n// };\n\n// export default LoanApplication;\n// import React, { useState, useEffect } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import { Button, Form, InputGroup } from 'react-bootstrap';\n// import { AiOutlineCheckCircle } from 'react-icons/ai';\n\n// const LoanApplication = () => {\n//   const [searchParams] = useSearchParams();\n//   const loanType = searchParams.get('type') || 'salary'; // Default to 'salary' if not specified.\n\n//   const [loanBreakdown, setLoanBreakdown] = useState({\n//     totalInterest: 0,\n//     totalPayable: 0,\n//     weeklyInstallment: 0,\n//   });\n\n//   const formik = useFormik({\n//     initialValues: {\n//       fullName: '',\n//       phoneNumber: '',\n//       idNumber: '',\n//       loanAmount: '',\n//       loanDuration: 5, // Default duration in weeks.\n//       payslips: null,\n//       bankStatement: null,\n//       businessCertificate: null,\n//       loanType: loanType, // Add loanType field for selection.\n//       referralCode: '',  // Referral code for \"refer a friend\"\n//       referralSource: '', // Where they heard about us\n//     },\n//     validationSchema: Yup.object({\n//       fullName: Yup.string().required('Full name is required'),\n//       phoneNumber: Yup.string().required('Phone number is required'),\n//       idNumber: Yup.string().required('ID number is required'),\n//       loanAmount: Yup.number()\n//         .min(500, 'Minimum loan amount is 500')\n//         .required('Loan amount is required'),\n//       loanDuration: Yup.number()\n//         .min(1, 'Minimum duration is 1 week')\n//         .max(5, 'Maximum duration is 5 weeks')\n//         .required('Loan duration is required'),\n//     }),\n//     onSubmit: (values) => {\n//       console.log('Form Submitted:', values);\n//       alert('Application submitted successfully!');\n//     },\n//   });\n\n//   const calculateLoanBreakdown = () => {\n//     const amount = parseFloat(formik.values.loanAmount || 0);\n//     const duration = parseInt(formik.values.loanDuration || 1, 10);\n//     const weeklyInterestRate = 0.05; // 5% weekly interest.\n\n//     const totalInterest = amount * weeklyInterestRate * duration;\n//     const totalPayable = amount + totalInterest;\n//     const weeklyInstallment = totalPayable / duration;\n\n//     setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n//   };\n\n//   useEffect(() => {\n//     calculateLoanBreakdown();\n//   }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Loan Application</h2>\n//       <p>Apply for a {loanType === 'salary' ? 'Salary Loan' : 'Business Loan'}.</p>\n\n//       <form\n//         onSubmit={formik.handleSubmit}\n//         className=\"mt-4\"\n//         onChange={calculateLoanBreakdown}\n//       >\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"fullName\" className=\"form-label\">Full Name</label>\n//           <input\n//             id=\"fullName\"\n//             name=\"fullName\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.fullName}\n//           />\n//           {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"phoneNumber\" className=\"form-label\">Phone Number</label>\n//           <input\n//             id=\"phoneNumber\"\n//             name=\"phoneNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.phoneNumber}\n//           />\n//           {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"idNumber\" className=\"form-label\">National ID/Passport</label>\n//           <input\n//             id=\"idNumber\"\n//             name=\"idNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.idNumber}\n//           />\n//           {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanAmount\" className=\"form-label\">Loan Amount</label>\n//           <input\n//             id=\"loanAmount\"\n//             name=\"loanAmount\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanAmount}\n//           />\n//           {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanDuration\" className=\"form-label\">Loan Duration (in weeks)</label>\n//           <input\n//             id=\"loanDuration\"\n//             name=\"loanDuration\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanDuration}\n//           />\n//           {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanType\" className=\"form-label\">Select Loan Type</label>\n//           <select\n//             id=\"loanType\"\n//             name=\"loanType\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanType}\n//           >\n//             <option value=\"salary\">Salary Loan</option>\n//             <option value=\"business\">Business Loan</option>\n//           </select>\n//         </div>\n\n//         {formik.values.loanType === 'salary' && (\n//           <>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"payslips\" className=\"form-label\">Upload Payslips</label>\n//               <input\n//                 id=\"payslips\"\n//                 name=\"payslips\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => formik.setFieldValue('payslips', e.target.files[0])}\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"bankStatement\" className=\"form-label\">Upload Bank Statement</label>\n//               <input\n//                 id=\"bankStatement\"\n//                 name=\"bankStatement\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => formik.setFieldValue('bankStatement', e.target.files[0])}\n//               />\n//             </div>\n//           </>\n//         )}\n\n//         {formik.values.loanType === 'business' && (\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"businessCertificate\" className=\"form-label\">Business Registration Certificate</label>\n//             <input\n//               id=\"businessCertificate\"\n//               name=\"businessCertificate\"\n//               type=\"file\"\n//               className=\"form-control\"\n//               onChange={(e) => formik.setFieldValue('businessCertificate', e.target.files[0])}\n//             />\n//           </div>\n//         )}\n\n//         {/* Refer a Friend Section */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"referralCode\" className=\"form-label\">Referral Code (Optional)</label>\n//           <input\n//             id=\"referralCode\"\n//             name=\"referralCode\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.referralCode}\n//           />\n//           <small className=\"form-text text-muted\">\n//             Refer a friend and receive a 3% reward upon successful application.\n//           </small>\n//         </div>\n\n//         {/* How did you hear about us Section */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"referralSource\" className=\"form-label\">How did you hear about us?</label>\n//           <select\n//             id=\"referralSource\"\n//             name=\"referralSource\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.referralSource}\n//           >\n//             <option value=\"\">Select an option</option>\n//             <option value=\"facebook\">Facebook</option>\n//             <option value=\"whatsapp\">WhatsApp</option>\n//             <option value=\"social_media\">Other Social Media</option>\n//             <option value=\"friend\">Friend/Referral</option>\n//             <option value=\"other\">Other</option>\n//           </select>\n//         </div>\n\n//         <h4 className=\"mt-4\">Loan Breakdown</h4>\n//         <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n//         <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n//         <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n//         <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n//           Submit Application <AiOutlineCheckCircle />\n//         </Button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // export default LoanApplication;\n// import React, { useState, useEffect } from 'react'; // Ensure these are imported\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import { Button, Form } from 'react-bootstrap'; // Removed unused imports\n// // import { AiOutlineInfoCircle } from 'react-icons/ai'; // Removed since it's not used\n// // import { Alert } from 'react-bootstrap'; // Removed since it's not used\n\n// const LoanApplication = () => {\n//   const [loanType, setLoanType] = useState('salary'); // Default loan type is salary\n//   const [loanBreakdown, setLoanBreakdown] = useState({\n//     totalInterest: 0,\n//     totalPayable: 0,\n//     weeklyInstallment: 0,\n//   });\n\n//   const formik = useFormik({\n//     initialValues: {\n//       fullName: '',\n//       phoneNumber: '',\n//       idNumber: '',\n//       loanAmount: '',\n//       loanDuration: 5, // Default duration in weeks\n//       loanType: 'salary',\n//       payslips: null,\n//       bankStatement: null,\n//       businessCertificate: null,\n//       referralSource: '',  // New field for how the user found out about the loan\n//       referAFriend: false,  // New field for refer a friend offer\n//     },\n//     validationSchema: Yup.object({\n//       fullName: Yup.string().required('Full name is required'),\n//       phoneNumber: Yup.string().required('Phone number is required'),\n//       idNumber: Yup.string().required('National ID/Passport is required'),\n//       loanAmount: Yup.number().min(500, 'Minimum loan amount is 500').required('Loan amount is required'),\n//       loanDuration: Yup.number().min(1, 'Duration must be between 1 to 5 weeks').max(5, 'Maximum duration is 5 weeks').required('Loan duration is required'),\n//     }),\n//     onSubmit: (values) => {\n//       console.log('Form Submitted:', values);\n//       alert(`Application submitted successfully for a ${values.loanType} loan!`);\n//     },\n//   });\n\n//   // Calculate loan breakdown\n//   useEffect(() => {\n//     const calculateLoanBreakdown = () => {\n//       const amount = parseFloat(formik.values.loanAmount || 0);\n//       const duration = parseInt(formik.values.loanDuration || 1, 10);\n//       const weeklyInterestRate = 0.05; // 5% weekly interest rate\n\n//       const totalInterest = amount * weeklyInterestRate * duration;\n//       const totalPayable = amount + totalInterest;\n//       const weeklyInstallment = totalPayable / duration;\n\n//       setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n//     };\n\n//     calculateLoanBreakdown();\n//   }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Loan Application</h2>\n//       <p>Apply for a loan by selecting the loan type below.</p>\n\n//       <Form onSubmit={formik.handleSubmit}>\n//         {/* Loan Type Selection */}\n//         <Form.Group controlId=\"loanType\">\n//           <Form.Label>Select Loan Type</Form.Label>\n//           <Form.Check\n//             type=\"radio\"\n//             label=\"Salary Loan\"\n//             name=\"loanType\"\n//             value=\"salary\"\n//             checked={loanType === 'salary'}\n//             onChange={(e) => setLoanType(e.target.value)}\n//           />\n//           <Form.Check\n//             type=\"radio\"\n//             label=\"Business Loan\"\n//             name=\"loanType\"\n//             value=\"business\"\n//             checked={loanType === 'business'}\n//             onChange={(e) => setLoanType(e.target.value)}\n//           />\n//         </Form.Group>\n\n//         {/* Full Name */}\n//         <Form.Group controlId=\"fullName\">\n//           <Form.Label>Full Name</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Enter your full name\"\n//             name=\"fullName\"\n//             onChange={formik.handleChange}\n//             value={formik.values.fullName}\n//           />\n//           {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n//         </Form.Group>\n\n//         {/* Phone Number */}\n//         <Form.Group controlId=\"phoneNumber\">\n//           <Form.Label>Phone Number</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Enter your phone number\"\n//             name=\"phoneNumber\"\n//             onChange={formik.handleChange}\n//             value={formik.values.phoneNumber}\n//           />\n//           {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n//         </Form.Group>\n\n//         {/* ID Number */}\n//         <Form.Group controlId=\"idNumber\">\n//           <Form.Label>National ID / Passport</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Enter your National ID or Passport number\"\n//             name=\"idNumber\"\n//             onChange={formik.handleChange}\n//             value={formik.values.idNumber}\n//           />\n//           {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n//         </Form.Group>\n\n//         {/* Loan Amount */}\n//         <Form.Group controlId=\"loanAmount\">\n//           <Form.Label>Loan Amount</Form.Label>\n//           <Form.Control\n//             type=\"number\"\n//             placeholder=\"Enter loan amount\"\n//             name=\"loanAmount\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanAmount}\n//           />\n//           {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n//         </Form.Group>\n\n//         {/* Loan Duration */}\n//         <Form.Group controlId=\"loanDuration\">\n//           <Form.Label>Loan Duration (in weeks)</Form.Label>\n//           <Form.Control\n//             type=\"number\"\n//             placeholder=\"Enter loan duration\"\n//             name=\"loanDuration\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanDuration}\n//           />\n//           {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n//         </Form.Group>\n\n//         {/* Conditional File Uploads */}\n//         {loanType === 'salary' && (\n//           <>\n//             <Form.Group controlId=\"payslips\">\n//               <Form.Label>Upload Payslips</Form.Label>\n//               <Form.Control\n//                 type=\"file\"\n//                 name=\"payslips\"\n//                 onChange={(e) => formik.setFieldValue('payslips', e.target.files[0])}\n//               />\n//             </Form.Group>\n//             <Form.Group controlId=\"bankStatement\">\n//               <Form.Label>Upload Bank Statement</Form.Label>\n//               <Form.Control\n//                 type=\"file\"\n//                 name=\"bankStatement\"\n//                 onChange={(e) => formik.setFieldValue('bankStatement', e.target.files[0])}\n//               />\n//             </Form.Group>\n//           </>\n//         )}\n\n//         {loanType === 'business' && (\n//           <Form.Group controlId=\"businessCertificate\">\n//             <Form.Label>Business Registration Certificate</Form.Label>\n//             <Form.Control\n//               type=\"file\"\n//               name=\"businessCertificate\"\n//               onChange={(e) => formik.setFieldValue('businessCertificate', e.target.files[0])}\n//             />\n//           </Form.Group>\n//         )}\n\n//         {/* Referral Section */}\n//         <Form.Group controlId=\"referralSource\">\n//           <Form.Label>How did you hear about us?</Form.Label>\n//           <Form.Control\n//             as=\"select\"\n//             name=\"referralSource\"\n//             onChange={formik.handleChange}\n//             value={formik.values.referralSource}\n//           >\n//             <option value=\"\">Select an option</option>\n//             <option value=\"facebook\">Facebook</option>\n//             <option value=\"whatsapp\">WhatsApp</option>\n//             <option value=\"socialMedia\">Social Media</option>\n//             <option value=\"friend\">Friend</option>\n//             <option value=\"other\">Other</option>\n//           </Form.Control>\n//         </Form.Group>\n\n//         {/* Refer a Friend Checkbox */}\n//         <Form.Group controlId=\"referAFriend\">\n//           <Form.Check\n//             type=\"checkbox\"\n//             label=\"Refer a friend and get 3% off your loan!\"\n//             name=\"referAFriend\"\n//             onChange={formik.handleChange}\n//             checked={formik.values.referAFriend}\n//           />\n//         </Form.Group>\n\n//         {/* Loan Breakdown */}\n//         <h4 className=\"mt-4\">Loan Breakdown</h4>\n//         <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n//         <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n//         <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n//         {/* Submit Button */}\n//         <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">\n//           Submit Application\n//         </Button>\n//       </Form>\n//     </div>\n//   );\n// };\n\n// export default LoanApplication;\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Tooltip, Button, Modal } from 'react-bootstrap';\nimport { AiOutlineInfoCircle } from 'react-icons/ai'; // Add icon for loan type\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoanApplication = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const loanType = searchParams.get('type') || 'salary'; // Default to 'salary' if not specified\n\n  const [loanBreakdown, setLoanBreakdown] = useState({\n    totalInterest: 0,\n    totalPayable: 0,\n    weeklyInstallment: 0\n  });\n  const [showModal, setShowModal] = useState(false);\n\n  // Formik setup for form validation\n  const formik = useFormik({\n    initialValues: {\n      fullName: '',\n      phoneNumber: '',\n      idNumber: '',\n      loanAmount: '',\n      loanDuration: 5,\n      // Default duration in weeks\n      payslips: null,\n      bankStatement: null,\n      businessCertificate: null\n    },\n    validationSchema: Yup.object({\n      fullName: Yup.string().required('Full name is required'),\n      phoneNumber: Yup.string().required('Phone number is required'),\n      idNumber: Yup.string().required('ID number is required'),\n      loanAmount: Yup.number().min(500, 'Minimum loan amount is 500 KES').required('Loan amount is required'),\n      loanDuration: Yup.number().min(1, 'Minimum duration is 1 week').max(5, 'Maximum duration is 5 weeks').required('Loan duration is required')\n    }),\n    onSubmit: values => {\n      console.log('Form Submitted:', values);\n      alert('Your application has been successfully submitted!');\n    }\n  });\n\n  // Calculate loan breakdown (interest, total repayable, weekly installment)\n  const calculateLoanBreakdown = () => {\n    const amount = parseFloat(formik.values.loanAmount || 0);\n    const duration = parseInt(formik.values.loanDuration || 1, 10);\n    const weeklyInterestRate = 0.05; // 5% weekly interest rate\n\n    const totalInterest = amount * weeklyInterestRate * duration;\n    const totalPayable = amount + totalInterest;\n    const weeklyInstallment = totalPayable / duration;\n    setLoanBreakdown({\n      totalInterest,\n      totalPayable,\n      weeklyInstallment\n    });\n  };\n  useEffect(() => {\n    calculateLoanBreakdown(); // Recalculate breakdown when form values change\n  }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n  // Function to handle document preview\n  const handleFileUpload = (e, fieldName) => {\n    const file = e.target.files[0];\n    formik.setFieldValue(fieldName, file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loan Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Apply for a \", loanType === 'salary' ? 'Salary Loan' : 'Business Loan', \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fullName\",\n          className: \"form-label\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"fullName\",\n          name: \"fullName\",\n          type: \"text\",\n          className: \"form-control\",\n          onChange: formik.handleChange,\n          value: formik.values.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 11\n        }, this), formik.errors.fullName && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: formik.errors.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phoneNumber\",\n          className: \"form-label\",\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"phoneNumber\",\n          name: \"phoneNumber\",\n          type: \"text\",\n          className: \"form-control\",\n          onChange: formik.handleChange,\n          value: formik.values.phoneNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 11\n        }, this), formik.errors.phoneNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: formik.errors.phoneNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"idNumber\",\n          className: \"form-label\",\n          children: \"National ID/Passport\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"idNumber\",\n          name: \"idNumber\",\n          type: \"text\",\n          className: \"form-control\",\n          onChange: formik.handleChange,\n          value: formik.values.idNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 11\n        }, this), formik.errors.idNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: formik.errors.idNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"loanAmount\",\n          className: \"form-label\",\n          children: \"Loan Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"loanAmount\",\n          name: \"loanAmount\",\n          type: \"number\",\n          className: \"form-control\",\n          onChange: formik.handleChange,\n          value: formik.values.loanAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 11\n        }, this), formik.errors.loanAmount && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: formik.errors.loanAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"loanDuration\",\n          className: \"form-label\",\n          children: \"Loan Duration (in weeks)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"loanDuration\",\n          name: \"loanDuration\",\n          type: \"number\",\n          className: \"form-control\",\n          onChange: formik.handleChange,\n          value: formik.values.loanDuration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 11\n        }, this), formik.errors.loanDuration && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: formik.errors.loanDuration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 9\n      }, this), loanType === 'salary' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"payslips\",\n            className: \"form-label\",\n            children: \"Upload Payslips\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"payslips\",\n            name: \"payslips\",\n            type: \"file\",\n            className: \"form-control\",\n            onChange: e => handleFileUpload(e, 'payslips')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 850,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bankStatement\",\n            className: \"form-label\",\n            children: \"Upload Bank Statement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 859,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"bankStatement\",\n            name: \"bankStatement\",\n            type: \"file\",\n            className: \"form-control\",\n            onChange: e => handleFileUpload(e, 'bankStatement')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), loanType === 'business' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"businessCertificate\",\n          className: \"form-label\",\n          children: \"Business Registration Certificate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"businessCertificate\",\n          name: \"businessCertificate\",\n          type: \"file\",\n          className: \"form-control\",\n          onChange: e => handleFileUpload(e, 'businessCertificate')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mt-4\",\n        children: \"Loan Breakdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Interest:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 12\n        }, this), \" KES \", loanBreakdown.totalInterest.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Payable:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 887,\n          columnNumber: 12\n        }, this), \" KES \", loanBreakdown.totalPayable.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Weekly Installment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 12\n        }, this), \" KES \", loanBreakdown.weeklyInstallment.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mt-3\",\n        children: \"Submit Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 891,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          placement: \"top\",\n          title: \"Choose the loan type depending on your application\",\n          children: /*#__PURE__*/_jsxDEV(AiOutlineInfoCircle, {\n            size: 25\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setShowModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Loan Terms & Conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"By applying for this loan, you agree to our terms and conditions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 907,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 906,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 902,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 770,\n    columnNumber: 5\n  }, this);\n};\n_s(LoanApplication, \"PIhrtSNhL6stMQfhs2Zs4cI+2T4=\", false, function () {\n  return [useSearchParams, useFormik];\n});\n_c = LoanApplication;\nexport default LoanApplication;\nvar _c;\n$RefreshReg$(_c, \"LoanApplication\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","useFormik","Yup","Tooltip","Button","Modal","AiOutlineInfoCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","LoanApplication","_s","searchParams","loanType","get","loanBreakdown","setLoanBreakdown","totalInterest","totalPayable","weeklyInstallment","showModal","setShowModal","formik","initialValues","fullName","phoneNumber","idNumber","loanAmount","loanDuration","payslips","bankStatement","businessCertificate","validationSchema","object","string","required","number","min","max","onSubmit","values","console","log","alert","calculateLoanBreakdown","amount","parseFloat","duration","parseInt","weeklyInterestRate","handleFileUpload","e","fieldName","file","target","files","setFieldValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","htmlFor","id","name","type","onChange","handleChange","value","errors","toFixed","placement","title","size","show","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/home/kipngenoh/Desktop/CODING SOLUTIONS/REACT_PROJECTS/lyms-microfinance/src/pages/LoanApplication.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import { Tooltip, Button, Modal } from 'react-bootstrap';\n// import { AiOutlineInfoCircle } from 'react-icons/ai'; // Add icon for loan type\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const LoanApplication = () => {\n//   const [searchParams] = useSearchParams();\n//   const loanType = searchParams.get('type') || 'salary'; // Default to 'salary' if not specified\n\n//   const [loanBreakdown, setLoanBreakdown] = useState({\n//     totalInterest: 0,\n//     totalPayable: 0,\n//     weeklyInstallment: 0,\n//   });\n\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Formik setup for form validation\n//   const formik = useFormik({\n//     initialValues: {\n//       fullName: '',\n//       phoneNumber: '',\n//       idNumber: '',\n//       loanAmount: '',\n//       loanDuration: 5, // Default duration in weeks\n//       payslips: null,\n//       bankStatement: null,\n//       businessCertificate: null,\n//     },\n//     validationSchema: Yup.object({\n//       fullName: Yup.string().required('Full name is required'),\n//       phoneNumber: Yup.string().required('Phone number is required'),\n//       idNumber: Yup.string().required('ID number is required'),\n//       loanAmount: Yup.number()\n//         .min(500, 'Minimum loan amount is 500 KES')\n//         .required('Loan amount is required'),\n//       loanDuration: Yup.number()\n//         .min(1, 'Minimum duration is 1 week')\n//         .max(5, 'Maximum duration is 5 weeks')\n//         .required('Loan duration is required'),\n//     }),\n//     onSubmit: (values) => {\n//       console.log('Form Submitted:', values);\n//       alert('Your application has been successfully submitted!');\n//     },\n//   });\n\n//   // Calculate loan breakdown (interest, total repayable, weekly installment)\n//   const calculateLoanBreakdown = () => {\n//     const amount = parseFloat(formik.values.loanAmount || 0);\n//     const duration = parseInt(formik.values.loanDuration || 1, 10);\n//     const weeklyInterestRate = 0.05; // 5% weekly interest rate\n\n//     const totalInterest = amount * weeklyInterestRate * duration;\n//     const totalPayable = amount + totalInterest;\n//     const weeklyInstallment = totalPayable / duration;\n\n//     setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n//   };\n\n//   useEffect(() => {\n//     calculateLoanBreakdown(); // Recalculate breakdown when form values change\n//   }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n//   // Function to handle document preview\n//   const handleFileUpload = (e, fieldName) => {\n//     const file = e.target.files[0];\n//     formik.setFieldValue(fieldName, file);\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Loan Application</h2>\n//       <p>Apply for a {loanType === 'salary' ? 'Salary Loan' : 'Business Loan'}.</p>\n\n//       <form onSubmit={formik.handleSubmit} className=\"mt-4\">\n//         {/* Full Name */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"fullName\" className=\"form-label\">Full Name</label>\n//           <input\n//             id=\"fullName\"\n//             name=\"fullName\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.fullName}\n//           />\n//           {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n//         </div>\n\n//         {/* Phone Number */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"phoneNumber\" className=\"form-label\">Phone Number</label>\n//           <input\n//             id=\"phoneNumber\"\n//             name=\"phoneNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.phoneNumber}\n//           />\n//           {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n//         </div>\n\n//         {/* National ID / Passport */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"idNumber\" className=\"form-label\">National ID/Passport</label>\n//           <input\n//             id=\"idNumber\"\n//             name=\"idNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.idNumber}\n//           />\n//           {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n//         </div>\n\n//         {/* Loan Amount */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanAmount\" className=\"form-label\">Loan Amount</label>\n//           <input\n//             id=\"loanAmount\"\n//             name=\"loanAmount\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanAmount}\n//           />\n//           {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n//         </div>\n\n//         {/* Loan Duration */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanDuration\" className=\"form-label\">Loan Duration (in weeks)</label>\n//           <input\n//             id=\"loanDuration\"\n//             name=\"loanDuration\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanDuration}\n//           />\n//           {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n//         </div>\n\n//         {/* Conditional File Uploads */}\n//         {loanType === 'salary' && (\n//           <>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"payslips\" className=\"form-label\">Upload Payslips</label>\n//               <input\n//                 id=\"payslips\"\n//                 name=\"payslips\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => handleFileUpload(e, 'payslips')}\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"bankStatement\" className=\"form-label\">Upload Bank Statement</label>\n//               <input\n//                 id=\"bankStatement\"\n//                 name=\"bankStatement\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => handleFileUpload(e, 'bankStatement')}\n//               />\n//             </div>\n//           </>\n//         )}\n\n//         {loanType === 'business' && (\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"businessCertificate\" className=\"form-label\">Business Registration Certificate</label>\n//             <input\n//               id=\"businessCertificate\"\n//               name=\"businessCertificate\"\n//               type=\"file\"\n//               className=\"form-control\"\n//               onChange={(e) => handleFileUpload(e, 'businessCertificate')}\n//             />\n//           </div>\n//         )}\n\n//         {/* Loan Breakdown */}\n//         <h4 className=\"mt-4\">Loan Breakdown</h4>\n//         <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n//         <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n//         <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n//         {/* Submit Button */}\n//         <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit Application</button>\n\n//         {/* Tooltip Info for Loan Type */}\n//         <div className=\"mt-3\">\n//           <Tooltip placement=\"top\" title=\"Choose the loan type depending on your application\">\n//             <AiOutlineInfoCircle size={25} />\n//           </Tooltip>\n//         </div>\n//       </form>\n\n//       {/* Modal for Terms & Conditions */}\n//       <Modal show={showModal} onHide={() => setShowModal(false)}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>Loan Terms & Conditions</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>\n//           <p>By applying for this loan, you agree to our terms and conditions...</p>\n//           {/* Add your actual terms here */}\n//         </Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n//             Close\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </div>\n//   );\n// };\n\n// export default LoanApplication;\n// import React, { useState, useEffect } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import { Button, Form, InputGroup } from 'react-bootstrap';\n// import { AiOutlineCheckCircle } from 'react-icons/ai';\n\n// const LoanApplication = () => {\n//   const [searchParams] = useSearchParams();\n//   const loanType = searchParams.get('type') || 'salary'; // Default to 'salary' if not specified.\n\n//   const [loanBreakdown, setLoanBreakdown] = useState({\n//     totalInterest: 0,\n//     totalPayable: 0,\n//     weeklyInstallment: 0,\n//   });\n\n//   const formik = useFormik({\n//     initialValues: {\n//       fullName: '',\n//       phoneNumber: '',\n//       idNumber: '',\n//       loanAmount: '',\n//       loanDuration: 5, // Default duration in weeks.\n//       payslips: null,\n//       bankStatement: null,\n//       businessCertificate: null,\n//       loanType: loanType, // Add loanType field for selection.\n//       referralCode: '',  // Referral code for \"refer a friend\"\n//       referralSource: '', // Where they heard about us\n//     },\n//     validationSchema: Yup.object({\n//       fullName: Yup.string().required('Full name is required'),\n//       phoneNumber: Yup.string().required('Phone number is required'),\n//       idNumber: Yup.string().required('ID number is required'),\n//       loanAmount: Yup.number()\n//         .min(500, 'Minimum loan amount is 500')\n//         .required('Loan amount is required'),\n//       loanDuration: Yup.number()\n//         .min(1, 'Minimum duration is 1 week')\n//         .max(5, 'Maximum duration is 5 weeks')\n//         .required('Loan duration is required'),\n//     }),\n//     onSubmit: (values) => {\n//       console.log('Form Submitted:', values);\n//       alert('Application submitted successfully!');\n//     },\n//   });\n\n//   const calculateLoanBreakdown = () => {\n//     const amount = parseFloat(formik.values.loanAmount || 0);\n//     const duration = parseInt(formik.values.loanDuration || 1, 10);\n//     const weeklyInterestRate = 0.05; // 5% weekly interest.\n\n//     const totalInterest = amount * weeklyInterestRate * duration;\n//     const totalPayable = amount + totalInterest;\n//     const weeklyInstallment = totalPayable / duration;\n\n//     setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n//   };\n\n//   useEffect(() => {\n//     calculateLoanBreakdown();\n//   }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Loan Application</h2>\n//       <p>Apply for a {loanType === 'salary' ? 'Salary Loan' : 'Business Loan'}.</p>\n\n//       <form\n//         onSubmit={formik.handleSubmit}\n//         className=\"mt-4\"\n//         onChange={calculateLoanBreakdown}\n//       >\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"fullName\" className=\"form-label\">Full Name</label>\n//           <input\n//             id=\"fullName\"\n//             name=\"fullName\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.fullName}\n//           />\n//           {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"phoneNumber\" className=\"form-label\">Phone Number</label>\n//           <input\n//             id=\"phoneNumber\"\n//             name=\"phoneNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.phoneNumber}\n//           />\n//           {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"idNumber\" className=\"form-label\">National ID/Passport</label>\n//           <input\n//             id=\"idNumber\"\n//             name=\"idNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.idNumber}\n//           />\n//           {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanAmount\" className=\"form-label\">Loan Amount</label>\n//           <input\n//             id=\"loanAmount\"\n//             name=\"loanAmount\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanAmount}\n//           />\n//           {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanDuration\" className=\"form-label\">Loan Duration (in weeks)</label>\n//           <input\n//             id=\"loanDuration\"\n//             name=\"loanDuration\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanDuration}\n//           />\n//           {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanType\" className=\"form-label\">Select Loan Type</label>\n//           <select\n//             id=\"loanType\"\n//             name=\"loanType\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanType}\n//           >\n//             <option value=\"salary\">Salary Loan</option>\n//             <option value=\"business\">Business Loan</option>\n//           </select>\n//         </div>\n\n//         {formik.values.loanType === 'salary' && (\n//           <>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"payslips\" className=\"form-label\">Upload Payslips</label>\n//               <input\n//                 id=\"payslips\"\n//                 name=\"payslips\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => formik.setFieldValue('payslips', e.target.files[0])}\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"bankStatement\" className=\"form-label\">Upload Bank Statement</label>\n//               <input\n//                 id=\"bankStatement\"\n//                 name=\"bankStatement\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => formik.setFieldValue('bankStatement', e.target.files[0])}\n//               />\n//             </div>\n//           </>\n//         )}\n\n//         {formik.values.loanType === 'business' && (\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"businessCertificate\" className=\"form-label\">Business Registration Certificate</label>\n//             <input\n//               id=\"businessCertificate\"\n//               name=\"businessCertificate\"\n//               type=\"file\"\n//               className=\"form-control\"\n//               onChange={(e) => formik.setFieldValue('businessCertificate', e.target.files[0])}\n//             />\n//           </div>\n//         )}\n\n//         {/* Refer a Friend Section */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"referralCode\" className=\"form-label\">Referral Code (Optional)</label>\n//           <input\n//             id=\"referralCode\"\n//             name=\"referralCode\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.referralCode}\n//           />\n//           <small className=\"form-text text-muted\">\n//             Refer a friend and receive a 3% reward upon successful application.\n//           </small>\n//         </div>\n\n//         {/* How did you hear about us Section */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"referralSource\" className=\"form-label\">How did you hear about us?</label>\n//           <select\n//             id=\"referralSource\"\n//             name=\"referralSource\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.referralSource}\n//           >\n//             <option value=\"\">Select an option</option>\n//             <option value=\"facebook\">Facebook</option>\n//             <option value=\"whatsapp\">WhatsApp</option>\n//             <option value=\"social_media\">Other Social Media</option>\n//             <option value=\"friend\">Friend/Referral</option>\n//             <option value=\"other\">Other</option>\n//           </select>\n//         </div>\n\n//         <h4 className=\"mt-4\">Loan Breakdown</h4>\n//         <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n//         <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n//         <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n//         <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n//           Submit Application <AiOutlineCheckCircle />\n//         </Button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // export default LoanApplication;\n// import React, { useState, useEffect } from 'react'; // Ensure these are imported\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import { Button, Form } from 'react-bootstrap'; // Removed unused imports\n// // import { AiOutlineInfoCircle } from 'react-icons/ai'; // Removed since it's not used\n// // import { Alert } from 'react-bootstrap'; // Removed since it's not used\n\n// const LoanApplication = () => {\n//   const [loanType, setLoanType] = useState('salary'); // Default loan type is salary\n//   const [loanBreakdown, setLoanBreakdown] = useState({\n//     totalInterest: 0,\n//     totalPayable: 0,\n//     weeklyInstallment: 0,\n//   });\n\n//   const formik = useFormik({\n//     initialValues: {\n//       fullName: '',\n//       phoneNumber: '',\n//       idNumber: '',\n//       loanAmount: '',\n//       loanDuration: 5, // Default duration in weeks\n//       loanType: 'salary',\n//       payslips: null,\n//       bankStatement: null,\n//       businessCertificate: null,\n//       referralSource: '',  // New field for how the user found out about the loan\n//       referAFriend: false,  // New field for refer a friend offer\n//     },\n//     validationSchema: Yup.object({\n//       fullName: Yup.string().required('Full name is required'),\n//       phoneNumber: Yup.string().required('Phone number is required'),\n//       idNumber: Yup.string().required('National ID/Passport is required'),\n//       loanAmount: Yup.number().min(500, 'Minimum loan amount is 500').required('Loan amount is required'),\n//       loanDuration: Yup.number().min(1, 'Duration must be between 1 to 5 weeks').max(5, 'Maximum duration is 5 weeks').required('Loan duration is required'),\n//     }),\n//     onSubmit: (values) => {\n//       console.log('Form Submitted:', values);\n//       alert(`Application submitted successfully for a ${values.loanType} loan!`);\n//     },\n//   });\n\n//   // Calculate loan breakdown\n//   useEffect(() => {\n//     const calculateLoanBreakdown = () => {\n//       const amount = parseFloat(formik.values.loanAmount || 0);\n//       const duration = parseInt(formik.values.loanDuration || 1, 10);\n//       const weeklyInterestRate = 0.05; // 5% weekly interest rate\n\n//       const totalInterest = amount * weeklyInterestRate * duration;\n//       const totalPayable = amount + totalInterest;\n//       const weeklyInstallment = totalPayable / duration;\n\n//       setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n//     };\n\n//     calculateLoanBreakdown();\n//   }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Loan Application</h2>\n//       <p>Apply for a loan by selecting the loan type below.</p>\n\n//       <Form onSubmit={formik.handleSubmit}>\n//         {/* Loan Type Selection */}\n//         <Form.Group controlId=\"loanType\">\n//           <Form.Label>Select Loan Type</Form.Label>\n//           <Form.Check\n//             type=\"radio\"\n//             label=\"Salary Loan\"\n//             name=\"loanType\"\n//             value=\"salary\"\n//             checked={loanType === 'salary'}\n//             onChange={(e) => setLoanType(e.target.value)}\n//           />\n//           <Form.Check\n//             type=\"radio\"\n//             label=\"Business Loan\"\n//             name=\"loanType\"\n//             value=\"business\"\n//             checked={loanType === 'business'}\n//             onChange={(e) => setLoanType(e.target.value)}\n//           />\n//         </Form.Group>\n\n//         {/* Full Name */}\n//         <Form.Group controlId=\"fullName\">\n//           <Form.Label>Full Name</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Enter your full name\"\n//             name=\"fullName\"\n//             onChange={formik.handleChange}\n//             value={formik.values.fullName}\n//           />\n//           {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n//         </Form.Group>\n\n//         {/* Phone Number */}\n//         <Form.Group controlId=\"phoneNumber\">\n//           <Form.Label>Phone Number</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Enter your phone number\"\n//             name=\"phoneNumber\"\n//             onChange={formik.handleChange}\n//             value={formik.values.phoneNumber}\n//           />\n//           {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n//         </Form.Group>\n\n//         {/* ID Number */}\n//         <Form.Group controlId=\"idNumber\">\n//           <Form.Label>National ID / Passport</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Enter your National ID or Passport number\"\n//             name=\"idNumber\"\n//             onChange={formik.handleChange}\n//             value={formik.values.idNumber}\n//           />\n//           {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n//         </Form.Group>\n\n//         {/* Loan Amount */}\n//         <Form.Group controlId=\"loanAmount\">\n//           <Form.Label>Loan Amount</Form.Label>\n//           <Form.Control\n//             type=\"number\"\n//             placeholder=\"Enter loan amount\"\n//             name=\"loanAmount\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanAmount}\n//           />\n//           {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n//         </Form.Group>\n\n//         {/* Loan Duration */}\n//         <Form.Group controlId=\"loanDuration\">\n//           <Form.Label>Loan Duration (in weeks)</Form.Label>\n//           <Form.Control\n//             type=\"number\"\n//             placeholder=\"Enter loan duration\"\n//             name=\"loanDuration\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanDuration}\n//           />\n//           {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n//         </Form.Group>\n\n//         {/* Conditional File Uploads */}\n//         {loanType === 'salary' && (\n//           <>\n//             <Form.Group controlId=\"payslips\">\n//               <Form.Label>Upload Payslips</Form.Label>\n//               <Form.Control\n//                 type=\"file\"\n//                 name=\"payslips\"\n//                 onChange={(e) => formik.setFieldValue('payslips', e.target.files[0])}\n//               />\n//             </Form.Group>\n//             <Form.Group controlId=\"bankStatement\">\n//               <Form.Label>Upload Bank Statement</Form.Label>\n//               <Form.Control\n//                 type=\"file\"\n//                 name=\"bankStatement\"\n//                 onChange={(e) => formik.setFieldValue('bankStatement', e.target.files[0])}\n//               />\n//             </Form.Group>\n//           </>\n//         )}\n\n//         {loanType === 'business' && (\n//           <Form.Group controlId=\"businessCertificate\">\n//             <Form.Label>Business Registration Certificate</Form.Label>\n//             <Form.Control\n//               type=\"file\"\n//               name=\"businessCertificate\"\n//               onChange={(e) => formik.setFieldValue('businessCertificate', e.target.files[0])}\n//             />\n//           </Form.Group>\n//         )}\n\n//         {/* Referral Section */}\n//         <Form.Group controlId=\"referralSource\">\n//           <Form.Label>How did you hear about us?</Form.Label>\n//           <Form.Control\n//             as=\"select\"\n//             name=\"referralSource\"\n//             onChange={formik.handleChange}\n//             value={formik.values.referralSource}\n//           >\n//             <option value=\"\">Select an option</option>\n//             <option value=\"facebook\">Facebook</option>\n//             <option value=\"whatsapp\">WhatsApp</option>\n//             <option value=\"socialMedia\">Social Media</option>\n//             <option value=\"friend\">Friend</option>\n//             <option value=\"other\">Other</option>\n//           </Form.Control>\n//         </Form.Group>\n\n//         {/* Refer a Friend Checkbox */}\n//         <Form.Group controlId=\"referAFriend\">\n//           <Form.Check\n//             type=\"checkbox\"\n//             label=\"Refer a friend and get 3% off your loan!\"\n//             name=\"referAFriend\"\n//             onChange={formik.handleChange}\n//             checked={formik.values.referAFriend}\n//           />\n//         </Form.Group>\n\n//         {/* Loan Breakdown */}\n//         <h4 className=\"mt-4\">Loan Breakdown</h4>\n//         <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n//         <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n//         <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n//         {/* Submit Button */}\n//         <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">\n//           Submit Application\n//         </Button>\n//       </Form>\n//     </div>\n//   );\n// };\n\n// export default LoanApplication;\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Tooltip, Button, Modal } from 'react-bootstrap';\nimport { AiOutlineInfoCircle } from 'react-icons/ai'; // Add icon for loan type\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst LoanApplication = () => {\n  const [searchParams] = useSearchParams();\n  const loanType = searchParams.get('type') || 'salary'; // Default to 'salary' if not specified\n\n  const [loanBreakdown, setLoanBreakdown] = useState({\n    totalInterest: 0,\n    totalPayable: 0,\n    weeklyInstallment: 0,\n  });\n\n  const [showModal, setShowModal] = useState(false);\n\n  // Formik setup for form validation\n  const formik = useFormik({\n    initialValues: {\n      fullName: '',\n      phoneNumber: '',\n      idNumber: '',\n      loanAmount: '',\n      loanDuration: 5, // Default duration in weeks\n      payslips: null,\n      bankStatement: null,\n      businessCertificate: null,\n    },\n    validationSchema: Yup.object({\n      fullName: Yup.string().required('Full name is required'),\n      phoneNumber: Yup.string().required('Phone number is required'),\n      idNumber: Yup.string().required('ID number is required'),\n      loanAmount: Yup.number()\n        .min(500, 'Minimum loan amount is 500 KES')\n        .required('Loan amount is required'),\n      loanDuration: Yup.number()\n        .min(1, 'Minimum duration is 1 week')\n        .max(5, 'Maximum duration is 5 weeks')\n        .required('Loan duration is required'),\n    }),\n    onSubmit: (values) => {\n      console.log('Form Submitted:', values);\n      alert('Your application has been successfully submitted!');\n    },\n  });\n\n  // Calculate loan breakdown (interest, total repayable, weekly installment)\n  const calculateLoanBreakdown = () => {\n    const amount = parseFloat(formik.values.loanAmount || 0);\n    const duration = parseInt(formik.values.loanDuration || 1, 10);\n    const weeklyInterestRate = 0.05; // 5% weekly interest rate\n\n    const totalInterest = amount * weeklyInterestRate * duration;\n    const totalPayable = amount + totalInterest;\n    const weeklyInstallment = totalPayable / duration;\n\n    setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n  };\n\n  useEffect(() => {\n    calculateLoanBreakdown(); // Recalculate breakdown when form values change\n  }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n  // Function to handle document preview\n  const handleFileUpload = (e, fieldName) => {\n    const file = e.target.files[0];\n    formik.setFieldValue(fieldName, file);\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h2>Loan Application</h2>\n      <p>Apply for a {loanType === 'salary' ? 'Salary Loan' : 'Business Loan'}.</p>\n\n      <form onSubmit={formik.handleSubmit} className=\"mt-4\">\n        {/* Full Name */}\n        <div className=\"mb-3\">\n          <label htmlFor=\"fullName\" className=\"form-label\">Full Name</label>\n          <input\n            id=\"fullName\"\n            name=\"fullName\"\n            type=\"text\"\n            className=\"form-control\"\n            onChange={formik.handleChange}\n            value={formik.values.fullName}\n          />\n          {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n        </div>\n\n        {/* Phone Number */}\n        <div className=\"mb-3\">\n          <label htmlFor=\"phoneNumber\" className=\"form-label\">Phone Number</label>\n          <input\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n            type=\"text\"\n            className=\"form-control\"\n            onChange={formik.handleChange}\n            value={formik.values.phoneNumber}\n          />\n          {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n        </div>\n\n        {/* National ID / Passport */}\n        <div className=\"mb-3\">\n          <label htmlFor=\"idNumber\" className=\"form-label\">National ID/Passport</label>\n          <input\n            id=\"idNumber\"\n            name=\"idNumber\"\n            type=\"text\"\n            className=\"form-control\"\n            onChange={formik.handleChange}\n            value={formik.values.idNumber}\n          />\n          {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n        </div>\n\n        {/* Loan Amount */}\n        <div className=\"mb-3\">\n          <label htmlFor=\"loanAmount\" className=\"form-label\">Loan Amount</label>\n          <input\n            id=\"loanAmount\"\n            name=\"loanAmount\"\n            type=\"number\"\n            className=\"form-control\"\n            onChange={formik.handleChange}\n            value={formik.values.loanAmount}\n          />\n          {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n        </div>\n\n        {/* Loan Duration */}\n        <div className=\"mb-3\">\n          <label htmlFor=\"loanDuration\" className=\"form-label\">Loan Duration (in weeks)</label>\n          <input\n            id=\"loanDuration\"\n            name=\"loanDuration\"\n            type=\"number\"\n            className=\"form-control\"\n            onChange={formik.handleChange}\n            value={formik.values.loanDuration}\n          />\n          {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n        </div>\n\n        {/* Conditional File Uploads */}\n        {loanType === 'salary' && (\n          <>\n            <div className=\"mb-3\">\n              <label htmlFor=\"payslips\" className=\"form-label\">Upload Payslips</label>\n              <input\n                id=\"payslips\"\n                name=\"payslips\"\n                type=\"file\"\n                className=\"form-control\"\n                onChange={(e) => handleFileUpload(e, 'payslips')}\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"bankStatement\" className=\"form-label\">Upload Bank Statement</label>\n              <input\n                id=\"bankStatement\"\n                name=\"bankStatement\"\n                type=\"file\"\n                className=\"form-control\"\n                onChange={(e) => handleFileUpload(e, 'bankStatement')}\n              />\n            </div>\n          </>\n        )}\n\n        {loanType === 'business' && (\n          <div className=\"mb-3\">\n            <label htmlFor=\"businessCertificate\" className=\"form-label\">Business Registration Certificate</label>\n            <input\n              id=\"businessCertificate\"\n              name=\"businessCertificate\"\n              type=\"file\"\n              className=\"form-control\"\n              onChange={(e) => handleFileUpload(e, 'businessCertificate')}\n            />\n          </div>\n        )}\n\n        {/* Loan Breakdown */}\n        <h4 className=\"mt-4\">Loan Breakdown</h4>\n        <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n        <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n        <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n        {/* Submit Button */}\n        <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit Application</button>\n\n        {/* Tooltip Info for Loan Type */}\n        <div className=\"mt-3\">\n          <Tooltip placement=\"top\" title=\"Choose the loan type depending on your application\">\n            <AiOutlineInfoCircle size={25} />\n          </Tooltip>\n        </div>\n      </form>\n\n      {/* Modal for Terms & Conditions */}\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Loan Terms & Conditions</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>By applying for this loan, you agree to our terms and conditions...</p>\n          {/* Add your actual terms here */}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default LoanApplication;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}