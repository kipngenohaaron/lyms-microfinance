{"ast":null,"code":"var _jsxFileName = \"/home/kipngenoh/Desktop/CODING SOLUTIONS/REACT_PROJECTS/lyms-microfinance/src/pages/LoanApplication.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import { Tooltip, Button, Modal } from 'react-bootstrap';\n// import { AiOutlineInfoCircle } from 'react-icons/ai'; // Add icon for loan type\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const LoanApplication = () => {\n//   const [searchParams] = useSearchParams();\n//   const loanType = searchParams.get('type') || 'salary'; // Default to 'salary' if not specified\n\n//   const [loanBreakdown, setLoanBreakdown] = useState({\n//     totalInterest: 0,\n//     totalPayable: 0,\n//     weeklyInstallment: 0,\n//   });\n\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Formik setup for form validation\n//   const formik = useFormik({\n//     initialValues: {\n//       fullName: '',\n//       phoneNumber: '',\n//       idNumber: '',\n//       loanAmount: '',\n//       loanDuration: 5, // Default duration in weeks\n//       payslips: null,\n//       bankStatement: null,\n//       businessCertificate: null,\n//     },\n//     validationSchema: Yup.object({\n//       fullName: Yup.string().required('Full name is required'),\n//       phoneNumber: Yup.string().required('Phone number is required'),\n//       idNumber: Yup.string().required('ID number is required'),\n//       loanAmount: Yup.number()\n//         .min(500, 'Minimum loan amount is 500 KES')\n//         .required('Loan amount is required'),\n//       loanDuration: Yup.number()\n//         .min(1, 'Minimum duration is 1 week')\n//         .max(5, 'Maximum duration is 5 weeks')\n//         .required('Loan duration is required'),\n//     }),\n//     onSubmit: (values) => {\n//       console.log('Form Submitted:', values);\n//       alert('Your application has been successfully submitted!');\n//     },\n//   });\n\n//   // Calculate loan breakdown (interest, total repayable, weekly installment)\n//   const calculateLoanBreakdown = () => {\n//     const amount = parseFloat(formik.values.loanAmount || 0);\n//     const duration = parseInt(formik.values.loanDuration || 1, 10);\n//     const weeklyInterestRate = 0.05; // 5% weekly interest rate\n\n//     const totalInterest = amount * weeklyInterestRate * duration;\n//     const totalPayable = amount + totalInterest;\n//     const weeklyInstallment = totalPayable / duration;\n\n//     setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n//   };\n\n//   useEffect(() => {\n//     calculateLoanBreakdown(); // Recalculate breakdown when form values change\n//   }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n//   // Function to handle document preview\n//   const handleFileUpload = (e, fieldName) => {\n//     const file = e.target.files[0];\n//     formik.setFieldValue(fieldName, file);\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Loan Application</h2>\n//       <p>Apply for a {loanType === 'salary' ? 'Salary Loan' : 'Business Loan'}.</p>\n\n//       <form onSubmit={formik.handleSubmit} className=\"mt-4\">\n//         {/* Full Name */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"fullName\" className=\"form-label\">Full Name</label>\n//           <input\n//             id=\"fullName\"\n//             name=\"fullName\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.fullName}\n//           />\n//           {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n//         </div>\n\n//         {/* Phone Number */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"phoneNumber\" className=\"form-label\">Phone Number</label>\n//           <input\n//             id=\"phoneNumber\"\n//             name=\"phoneNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.phoneNumber}\n//           />\n//           {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n//         </div>\n\n//         {/* National ID / Passport */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"idNumber\" className=\"form-label\">National ID/Passport</label>\n//           <input\n//             id=\"idNumber\"\n//             name=\"idNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.idNumber}\n//           />\n//           {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n//         </div>\n\n//         {/* Loan Amount */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanAmount\" className=\"form-label\">Loan Amount</label>\n//           <input\n//             id=\"loanAmount\"\n//             name=\"loanAmount\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanAmount}\n//           />\n//           {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n//         </div>\n\n//         {/* Loan Duration */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanDuration\" className=\"form-label\">Loan Duration (in weeks)</label>\n//           <input\n//             id=\"loanDuration\"\n//             name=\"loanDuration\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanDuration}\n//           />\n//           {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n//         </div>\n\n//         {/* Conditional File Uploads */}\n//         {loanType === 'salary' && (\n//           <>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"payslips\" className=\"form-label\">Upload Payslips</label>\n//               <input\n//                 id=\"payslips\"\n//                 name=\"payslips\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => handleFileUpload(e, 'payslips')}\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"bankStatement\" className=\"form-label\">Upload Bank Statement</label>\n//               <input\n//                 id=\"bankStatement\"\n//                 name=\"bankStatement\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => handleFileUpload(e, 'bankStatement')}\n//               />\n//             </div>\n//           </>\n//         )}\n\n//         {loanType === 'business' && (\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"businessCertificate\" className=\"form-label\">Business Registration Certificate</label>\n//             <input\n//               id=\"businessCertificate\"\n//               name=\"businessCertificate\"\n//               type=\"file\"\n//               className=\"form-control\"\n//               onChange={(e) => handleFileUpload(e, 'businessCertificate')}\n//             />\n//           </div>\n//         )}\n\n//         {/* Loan Breakdown */}\n//         <h4 className=\"mt-4\">Loan Breakdown</h4>\n//         <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n//         <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n//         <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n//         {/* Submit Button */}\n//         <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit Application</button>\n\n//         {/* Tooltip Info for Loan Type */}\n//         <div className=\"mt-3\">\n//           <Tooltip placement=\"top\" title=\"Choose the loan type depending on your application\">\n//             <AiOutlineInfoCircle size={25} />\n//           </Tooltip>\n//         </div>\n//       </form>\n\n//       {/* Modal for Terms & Conditions */}\n//       <Modal show={showModal} onHide={() => setShowModal(false)}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>Loan Terms & Conditions</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>\n//           <p>By applying for this loan, you agree to our terms and conditions...</p>\n//           {/* Add your actual terms here */}\n//         </Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n//             Close\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </div>\n//   );\n// };\n\n// export default LoanApplication;\n// import React, { useState, useEffect } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import { Button, Form, InputGroup } from 'react-bootstrap';\n// import { AiOutlineCheckCircle } from 'react-icons/ai';\n\n// const LoanApplication = () => {\n//   const [searchParams] = useSearchParams();\n//   const loanType = searchParams.get('type') || 'salary'; // Default to 'salary' if not specified.\n\n//   const [loanBreakdown, setLoanBreakdown] = useState({\n//     totalInterest: 0,\n//     totalPayable: 0,\n//     weeklyInstallment: 0,\n//   });\n\n//   const formik = useFormik({\n//     initialValues: {\n//       fullName: '',\n//       phoneNumber: '',\n//       idNumber: '',\n//       loanAmount: '',\n//       loanDuration: 5, // Default duration in weeks.\n//       payslips: null,\n//       bankStatement: null,\n//       businessCertificate: null,\n//       loanType: loanType, // Add loanType field for selection.\n//       referralCode: '',  // Referral code for \"refer a friend\"\n//       referralSource: '', // Where they heard about us\n//     },\n//     validationSchema: Yup.object({\n//       fullName: Yup.string().required('Full name is required'),\n//       phoneNumber: Yup.string().required('Phone number is required'),\n//       idNumber: Yup.string().required('ID number is required'),\n//       loanAmount: Yup.number()\n//         .min(500, 'Minimum loan amount is 500')\n//         .required('Loan amount is required'),\n//       loanDuration: Yup.number()\n//         .min(1, 'Minimum duration is 1 week')\n//         .max(5, 'Maximum duration is 5 weeks')\n//         .required('Loan duration is required'),\n//     }),\n//     onSubmit: (values) => {\n//       console.log('Form Submitted:', values);\n//       alert('Application submitted successfully!');\n//     },\n//   });\n\n//   const calculateLoanBreakdown = () => {\n//     const amount = parseFloat(formik.values.loanAmount || 0);\n//     const duration = parseInt(formik.values.loanDuration || 1, 10);\n//     const weeklyInterestRate = 0.05; // 5% weekly interest.\n\n//     const totalInterest = amount * weeklyInterestRate * duration;\n//     const totalPayable = amount + totalInterest;\n//     const weeklyInstallment = totalPayable / duration;\n\n//     setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n//   };\n\n//   useEffect(() => {\n//     calculateLoanBreakdown();\n//   }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Loan Application</h2>\n//       <p>Apply for a {loanType === 'salary' ? 'Salary Loan' : 'Business Loan'}.</p>\n\n//       <form\n//         onSubmit={formik.handleSubmit}\n//         className=\"mt-4\"\n//         onChange={calculateLoanBreakdown}\n//       >\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"fullName\" className=\"form-label\">Full Name</label>\n//           <input\n//             id=\"fullName\"\n//             name=\"fullName\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.fullName}\n//           />\n//           {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"phoneNumber\" className=\"form-label\">Phone Number</label>\n//           <input\n//             id=\"phoneNumber\"\n//             name=\"phoneNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.phoneNumber}\n//           />\n//           {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"idNumber\" className=\"form-label\">National ID/Passport</label>\n//           <input\n//             id=\"idNumber\"\n//             name=\"idNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.idNumber}\n//           />\n//           {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanAmount\" className=\"form-label\">Loan Amount</label>\n//           <input\n//             id=\"loanAmount\"\n//             name=\"loanAmount\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanAmount}\n//           />\n//           {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanDuration\" className=\"form-label\">Loan Duration (in weeks)</label>\n//           <input\n//             id=\"loanDuration\"\n//             name=\"loanDuration\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanDuration}\n//           />\n//           {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanType\" className=\"form-label\">Select Loan Type</label>\n//           <select\n//             id=\"loanType\"\n//             name=\"loanType\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanType}\n//           >\n//             <option value=\"salary\">Salary Loan</option>\n//             <option value=\"business\">Business Loan</option>\n//           </select>\n//         </div>\n\n//         {formik.values.loanType === 'salary' && (\n//           <>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"payslips\" className=\"form-label\">Upload Payslips</label>\n//               <input\n//                 id=\"payslips\"\n//                 name=\"payslips\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => formik.setFieldValue('payslips', e.target.files[0])}\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"bankStatement\" className=\"form-label\">Upload Bank Statement</label>\n//               <input\n//                 id=\"bankStatement\"\n//                 name=\"bankStatement\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => formik.setFieldValue('bankStatement', e.target.files[0])}\n//               />\n//             </div>\n//           </>\n//         )}\n\n//         {formik.values.loanType === 'business' && (\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"businessCertificate\" className=\"form-label\">Business Registration Certificate</label>\n//             <input\n//               id=\"businessCertificate\"\n//               name=\"businessCertificate\"\n//               type=\"file\"\n//               className=\"form-control\"\n//               onChange={(e) => formik.setFieldValue('businessCertificate', e.target.files[0])}\n//             />\n//           </div>\n//         )}\n\n//         {/* Refer a Friend Section */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"referralCode\" className=\"form-label\">Referral Code (Optional)</label>\n//           <input\n//             id=\"referralCode\"\n//             name=\"referralCode\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.referralCode}\n//           />\n//           <small className=\"form-text text-muted\">\n//             Refer a friend and receive a 3% reward upon successful application.\n//           </small>\n//         </div>\n\n//         {/* How did you hear about us Section */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"referralSource\" className=\"form-label\">How did you hear about us?</label>\n//           <select\n//             id=\"referralSource\"\n//             name=\"referralSource\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.referralSource}\n//           >\n//             <option value=\"\">Select an option</option>\n//             <option value=\"facebook\">Facebook</option>\n//             <option value=\"whatsapp\">WhatsApp</option>\n//             <option value=\"social_media\">Other Social Media</option>\n//             <option value=\"friend\">Friend/Referral</option>\n//             <option value=\"other\">Other</option>\n//           </select>\n//         </div>\n\n//         <h4 className=\"mt-4\">Loan Breakdown</h4>\n//         <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n//         <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n//         <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n//         <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n//           Submit Application <AiOutlineCheckCircle />\n//         </Button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // export default LoanApplication;\n// import React, { useState, useEffect } from 'react'; // Ensure these are imported\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import { Button, Form } from 'react-bootstrap'; // Removed unused imports\n// // import { AiOutlineInfoCircle } from 'react-icons/ai'; // Removed since it's not used\n// // import { Alert } from 'react-bootstrap'; // Removed since it's not used\n\n// const LoanApplication = () => {\n//   const [loanType, setLoanType] = useState('salary'); // Default loan type is salary\n//   const [loanBreakdown, setLoanBreakdown] = useState({\n//     totalInterest: 0,\n//     totalPayable: 0,\n//     weeklyInstallment: 0,\n//   });\n\n//   const formik = useFormik({\n//     initialValues: {\n//       fullName: '',\n//       phoneNumber: '',\n//       idNumber: '',\n//       loanAmount: '',\n//       loanDuration: 5, // Default duration in weeks\n//       loanType: 'salary',\n//       payslips: null,\n//       bankStatement: null,\n//       businessCertificate: null,\n//       referralSource: '',  // New field for how the user found out about the loan\n//       referAFriend: false,  // New field for refer a friend offer\n//     },\n//     validationSchema: Yup.object({\n//       fullName: Yup.string().required('Full name is required'),\n//       phoneNumber: Yup.string().required('Phone number is required'),\n//       idNumber: Yup.string().required('National ID/Passport is required'),\n//       loanAmount: Yup.number().min(500, 'Minimum loan amount is 500').required('Loan amount is required'),\n//       loanDuration: Yup.number().min(1, 'Duration must be between 1 to 5 weeks').max(5, 'Maximum duration is 5 weeks').required('Loan duration is required'),\n//     }),\n//     onSubmit: (values) => {\n//       console.log('Form Submitted:', values);\n//       alert(`Application submitted successfully for a ${values.loanType} loan!`);\n//     },\n//   });\n\n//   // Calculate loan breakdown\n//   useEffect(() => {\n//     const calculateLoanBreakdown = () => {\n//       const amount = parseFloat(formik.values.loanAmount || 0);\n//       const duration = parseInt(formik.values.loanDuration || 1, 10);\n//       const weeklyInterestRate = 0.05; // 5% weekly interest rate\n\n//       const totalInterest = amount * weeklyInterestRate * duration;\n//       const totalPayable = amount + totalInterest;\n//       const weeklyInstallment = totalPayable / duration;\n\n//       setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n//     };\n\n//     calculateLoanBreakdown();\n//   }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Loan Application</h2>\n//       <p>Apply for a loan by selecting the loan type below.</p>\n\n//       <Form onSubmit={formik.handleSubmit}>\n//         {/* Loan Type Selection */}\n//         <Form.Group controlId=\"loanType\">\n//           <Form.Label>Select Loan Type</Form.Label>\n//           <Form.Check\n//             type=\"radio\"\n//             label=\"Salary Loan\"\n//             name=\"loanType\"\n//             value=\"salary\"\n//             checked={loanType === 'salary'}\n//             onChange={(e) => setLoanType(e.target.value)}\n//           />\n//           <Form.Check\n//             type=\"radio\"\n//             label=\"Business Loan\"\n//             name=\"loanType\"\n//             value=\"business\"\n//             checked={loanType === 'business'}\n//             onChange={(e) => setLoanType(e.target.value)}\n//           />\n//         </Form.Group>\n\n//         {/* Full Name */}\n//         <Form.Group controlId=\"fullName\">\n//           <Form.Label>Full Name</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Enter your full name\"\n//             name=\"fullName\"\n//             onChange={formik.handleChange}\n//             value={formik.values.fullName}\n//           />\n//           {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n//         </Form.Group>\n\n//         {/* Phone Number */}\n//         <Form.Group controlId=\"phoneNumber\">\n//           <Form.Label>Phone Number</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Enter your phone number\"\n//             name=\"phoneNumber\"\n//             onChange={formik.handleChange}\n//             value={formik.values.phoneNumber}\n//           />\n//           {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n//         </Form.Group>\n\n//         {/* ID Number */}\n//         <Form.Group controlId=\"idNumber\">\n//           <Form.Label>National ID / Passport</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Enter your National ID or Passport number\"\n//             name=\"idNumber\"\n//             onChange={formik.handleChange}\n//             value={formik.values.idNumber}\n//           />\n//           {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n//         </Form.Group>\n\n//         {/* Loan Amount */}\n//         <Form.Group controlId=\"loanAmount\">\n//           <Form.Label>Loan Amount</Form.Label>\n//           <Form.Control\n//             type=\"number\"\n//             placeholder=\"Enter loan amount\"\n//             name=\"loanAmount\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanAmount}\n//           />\n//           {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n//         </Form.Group>\n\n//         {/* Loan Duration */}\n//         <Form.Group controlId=\"loanDuration\">\n//           <Form.Label>Loan Duration (in weeks)</Form.Label>\n//           <Form.Control\n//             type=\"number\"\n//             placeholder=\"Enter loan duration\"\n//             name=\"loanDuration\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanDuration}\n//           />\n//           {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n//         </Form.Group>\n\n//         {/* Conditional File Uploads */}\n//         {loanType === 'salary' && (\n//           <>\n//             <Form.Group controlId=\"payslips\">\n//               <Form.Label>Upload Payslips</Form.Label>\n//               <Form.Control\n//                 type=\"file\"\n//                 name=\"payslips\"\n//                 onChange={(e) => formik.setFieldValue('payslips', e.target.files[0])}\n//               />\n//             </Form.Group>\n//             <Form.Group controlId=\"bankStatement\">\n//               <Form.Label>Upload Bank Statement</Form.Label>\n//               <Form.Control\n//                 type=\"file\"\n//                 name=\"bankStatement\"\n//                 onChange={(e) => formik.setFieldValue('bankStatement', e.target.files[0])}\n//               />\n//             </Form.Group>\n//           </>\n//         )}\n\n//         {loanType === 'business' && (\n//           <Form.Group controlId=\"businessCertificate\">\n//             <Form.Label>Business Registration Certificate</Form.Label>\n//             <Form.Control\n//               type=\"file\"\n//               name=\"businessCertificate\"\n//               onChange={(e) => formik.setFieldValue('businessCertificate', e.target.files[0])}\n//             />\n//           </Form.Group>\n//         )}\n\n//         {/* Referral Section */}\n//         <Form.Group controlId=\"referralSource\">\n//           <Form.Label>How did you hear about us?</Form.Label>\n//           <Form.Control\n//             as=\"select\"\n//             name=\"referralSource\"\n//             onChange={formik.handleChange}\n//             value={formik.values.referralSource}\n//           >\n//             <option value=\"\">Select an option</option>\n//             <option value=\"facebook\">Facebook</option>\n//             <option value=\"whatsapp\">WhatsApp</option>\n//             <option value=\"socialMedia\">Social Media</option>\n//             <option value=\"friend\">Friend</option>\n//             <option value=\"other\">Other</option>\n//           </Form.Control>\n//         </Form.Group>\n\n//         {/* Refer a Friend Checkbox */}\n//         <Form.Group controlId=\"referAFriend\">\n//           <Form.Check\n//             type=\"checkbox\"\n//             label=\"Refer a friend and get 3% off your loan!\"\n//             name=\"referAFriend\"\n//             onChange={formik.handleChange}\n//             checked={formik.values.referAFriend}\n//           />\n//         </Form.Group>\n\n//         {/* Loan Breakdown */}\n//         <h4 className=\"mt-4\">Loan Breakdown</h4>\n//         <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n//         <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n//         <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n//         {/* Submit Button */}\n//         <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">\n//           Submit Application\n//         </Button>\n//       </Form>\n//     </div>\n//   );\n// };\n\n// export default LoanApplication;\nimport React, { useState, useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Button, Form, Alert } from 'react-bootstrap';\nimport { AiOutlineInfoCircle } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoanApplication = () => {\n  _s();\n  const [loanType, setLoanType] = useState('salary'); // Default loan type is salary\n  const [loanBreakdown, setLoanBreakdown] = useState({\n    totalInterest: 0,\n    totalPayable: 0,\n    weeklyInstallment: 0\n  });\n  const formik = useFormik({\n    initialValues: {\n      fullName: '',\n      phoneNumber: '',\n      idNumber: '',\n      loanAmount: '',\n      loanDuration: 5,\n      // Default duration in weeks\n      loanType: 'salary',\n      payslips: null,\n      bankStatement: null,\n      businessCertificate: null\n    },\n    validationSchema: Yup.object({\n      fullName: Yup.string().required('Full name is required'),\n      phoneNumber: Yup.string().required('Phone number is required'),\n      idNumber: Yup.string().required('National ID/Passport is required'),\n      loanAmount: Yup.number().min(500, 'Minimum loan amount is 500').required('Loan amount is required'),\n      loanDuration: Yup.number().min(1, 'Duration must be between 1 to 5 weeks').max(5, 'Maximum duration is 5 weeks').required('Loan duration is required')\n    }),\n    onSubmit: values => {\n      console.log('Form Submitted:', values);\n      alert(`Application submitted successfully for a ${values.loanType} loan!`);\n    }\n  });\n\n  // Calculate loan breakdown\n  useEffect(() => {\n    const calculateLoanBreakdown = () => {\n      const amount = parseFloat(formik.values.loanAmount || 0);\n      const duration = parseInt(formik.values.loanDuration || 1, 10);\n      const weeklyInterestRate = 0.05; // 5% weekly interest rate\n\n      const totalInterest = amount * weeklyInterestRate * duration;\n      const totalPayable = amount + totalInterest;\n      const weeklyInstallment = totalPayable / duration;\n      setLoanBreakdown({\n        totalInterest,\n        totalPayable,\n        weeklyInstallment\n      });\n    };\n    calculateLoanBreakdown();\n  }, [formik.values.loanAmount, formik.values.loanDuration]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loan Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Apply for a loan by selecting the loan type below.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"loanType\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Select Loan Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"radio\",\n          label: \"Salary Loan\",\n          name: \"loanType\",\n          value: \"salary\",\n          checked: loanType === 'salary',\n          onChange: e => setLoanType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"radio\",\n          label: \"Business Loan\",\n          name: \"loanType\",\n          value: \"business\",\n          checked: loanType === 'business',\n          onChange: e => setLoanType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"fullName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter your full name\",\n          name: \"fullName\",\n          onChange: formik.handleChange,\n          value: formik.values.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 11\n        }, this), formik.errors.fullName && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: formik.errors.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"phoneNumber\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter your phone number\",\n          name: \"phoneNumber\",\n          onChange: formik.handleChange,\n          value: formik.values.phoneNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 11\n        }, this), formik.errors.phoneNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: formik.errors.phoneNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"idNumber\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"National ID / Passport\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter your National ID or Passport number\",\n          name: \"idNumber\",\n          onChange: formik.handleChange,\n          value: formik.values.idNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 11\n        }, this), formik.errors.idNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: formik.errors.idNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"loanAmount\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Loan Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Enter loan amount\",\n          name: \"loanAmount\",\n          onChange: formik.handleChange,\n          value: formik.values.loanAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 11\n        }, this), formik.errors.loanAmount && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: formik.errors.loanAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"loanDuration\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Loan Duration (in weeks)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Enter loan duration\",\n          name: \"loanDuration\",\n          onChange: formik.handleChange,\n          value: formik.values.loanDuration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 11\n        }, this), formik.errors.loanDuration && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: formik.errors.loanDuration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 9\n      }, this), loanType === 'salary' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"payslips\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Upload Payslips\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            name: \"payslips\",\n            onChange: e => formik.setFieldValue('payslips', e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"bankStatement\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Upload Bank Statement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            name: \"bankStatement\",\n            onChange: e => formik.setFieldValue('bankStatement', e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), loanType === 'business' && /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"businessCertificate\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Business Registration Certificate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          name: \"businessCertificate\",\n          onChange: e => formik.setFieldValue('businessCertificate', e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mt-4\",\n        children: \"Loan Breakdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Interest:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 12\n        }, this), \" KES \", loanBreakdown.totalInterest.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Payable:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 12\n        }, this), \" KES \", loanBreakdown.totalPayable.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Weekly Installment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 12\n        }, this), \" KES \", loanBreakdown.weeklyInstallment.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"mt-3\",\n        children: \"Submit Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 753,\n    columnNumber: 5\n  }, this);\n};\n_s(LoanApplication, \"hiT8g4+VVBmrHaxBkNOsJ84yGWM=\", false, function () {\n  return [useFormik];\n});\n_c = LoanApplication;\nexport default LoanApplication;\nvar _c;\n$RefreshReg$(_c, \"LoanApplication\");","map":{"version":3,"names":["React","useState","useEffect","useFormik","Yup","Button","Form","Alert","AiOutlineInfoCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","LoanApplication","_s","loanType","setLoanType","loanBreakdown","setLoanBreakdown","totalInterest","totalPayable","weeklyInstallment","formik","initialValues","fullName","phoneNumber","idNumber","loanAmount","loanDuration","payslips","bankStatement","businessCertificate","validationSchema","object","string","required","number","min","max","onSubmit","values","console","log","alert","calculateLoanBreakdown","amount","parseFloat","duration","parseInt","weeklyInterestRate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","Group","controlId","Label","Check","type","label","name","value","checked","onChange","e","target","Control","placeholder","handleChange","errors","setFieldValue","files","toFixed","variant","_c","$RefreshReg$"],"sources":["/home/kipngenoh/Desktop/CODING SOLUTIONS/REACT_PROJECTS/lyms-microfinance/src/pages/LoanApplication.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import { Tooltip, Button, Modal } from 'react-bootstrap';\n// import { AiOutlineInfoCircle } from 'react-icons/ai'; // Add icon for loan type\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const LoanApplication = () => {\n//   const [searchParams] = useSearchParams();\n//   const loanType = searchParams.get('type') || 'salary'; // Default to 'salary' if not specified\n\n//   const [loanBreakdown, setLoanBreakdown] = useState({\n//     totalInterest: 0,\n//     totalPayable: 0,\n//     weeklyInstallment: 0,\n//   });\n\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Formik setup for form validation\n//   const formik = useFormik({\n//     initialValues: {\n//       fullName: '',\n//       phoneNumber: '',\n//       idNumber: '',\n//       loanAmount: '',\n//       loanDuration: 5, // Default duration in weeks\n//       payslips: null,\n//       bankStatement: null,\n//       businessCertificate: null,\n//     },\n//     validationSchema: Yup.object({\n//       fullName: Yup.string().required('Full name is required'),\n//       phoneNumber: Yup.string().required('Phone number is required'),\n//       idNumber: Yup.string().required('ID number is required'),\n//       loanAmount: Yup.number()\n//         .min(500, 'Minimum loan amount is 500 KES')\n//         .required('Loan amount is required'),\n//       loanDuration: Yup.number()\n//         .min(1, 'Minimum duration is 1 week')\n//         .max(5, 'Maximum duration is 5 weeks')\n//         .required('Loan duration is required'),\n//     }),\n//     onSubmit: (values) => {\n//       console.log('Form Submitted:', values);\n//       alert('Your application has been successfully submitted!');\n//     },\n//   });\n\n//   // Calculate loan breakdown (interest, total repayable, weekly installment)\n//   const calculateLoanBreakdown = () => {\n//     const amount = parseFloat(formik.values.loanAmount || 0);\n//     const duration = parseInt(formik.values.loanDuration || 1, 10);\n//     const weeklyInterestRate = 0.05; // 5% weekly interest rate\n\n//     const totalInterest = amount * weeklyInterestRate * duration;\n//     const totalPayable = amount + totalInterest;\n//     const weeklyInstallment = totalPayable / duration;\n\n//     setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n//   };\n\n//   useEffect(() => {\n//     calculateLoanBreakdown(); // Recalculate breakdown when form values change\n//   }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n//   // Function to handle document preview\n//   const handleFileUpload = (e, fieldName) => {\n//     const file = e.target.files[0];\n//     formik.setFieldValue(fieldName, file);\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Loan Application</h2>\n//       <p>Apply for a {loanType === 'salary' ? 'Salary Loan' : 'Business Loan'}.</p>\n\n//       <form onSubmit={formik.handleSubmit} className=\"mt-4\">\n//         {/* Full Name */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"fullName\" className=\"form-label\">Full Name</label>\n//           <input\n//             id=\"fullName\"\n//             name=\"fullName\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.fullName}\n//           />\n//           {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n//         </div>\n\n//         {/* Phone Number */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"phoneNumber\" className=\"form-label\">Phone Number</label>\n//           <input\n//             id=\"phoneNumber\"\n//             name=\"phoneNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.phoneNumber}\n//           />\n//           {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n//         </div>\n\n//         {/* National ID / Passport */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"idNumber\" className=\"form-label\">National ID/Passport</label>\n//           <input\n//             id=\"idNumber\"\n//             name=\"idNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.idNumber}\n//           />\n//           {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n//         </div>\n\n//         {/* Loan Amount */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanAmount\" className=\"form-label\">Loan Amount</label>\n//           <input\n//             id=\"loanAmount\"\n//             name=\"loanAmount\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanAmount}\n//           />\n//           {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n//         </div>\n\n//         {/* Loan Duration */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanDuration\" className=\"form-label\">Loan Duration (in weeks)</label>\n//           <input\n//             id=\"loanDuration\"\n//             name=\"loanDuration\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanDuration}\n//           />\n//           {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n//         </div>\n\n//         {/* Conditional File Uploads */}\n//         {loanType === 'salary' && (\n//           <>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"payslips\" className=\"form-label\">Upload Payslips</label>\n//               <input\n//                 id=\"payslips\"\n//                 name=\"payslips\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => handleFileUpload(e, 'payslips')}\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"bankStatement\" className=\"form-label\">Upload Bank Statement</label>\n//               <input\n//                 id=\"bankStatement\"\n//                 name=\"bankStatement\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => handleFileUpload(e, 'bankStatement')}\n//               />\n//             </div>\n//           </>\n//         )}\n\n//         {loanType === 'business' && (\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"businessCertificate\" className=\"form-label\">Business Registration Certificate</label>\n//             <input\n//               id=\"businessCertificate\"\n//               name=\"businessCertificate\"\n//               type=\"file\"\n//               className=\"form-control\"\n//               onChange={(e) => handleFileUpload(e, 'businessCertificate')}\n//             />\n//           </div>\n//         )}\n\n//         {/* Loan Breakdown */}\n//         <h4 className=\"mt-4\">Loan Breakdown</h4>\n//         <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n//         <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n//         <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n//         {/* Submit Button */}\n//         <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit Application</button>\n\n//         {/* Tooltip Info for Loan Type */}\n//         <div className=\"mt-3\">\n//           <Tooltip placement=\"top\" title=\"Choose the loan type depending on your application\">\n//             <AiOutlineInfoCircle size={25} />\n//           </Tooltip>\n//         </div>\n//       </form>\n\n//       {/* Modal for Terms & Conditions */}\n//       <Modal show={showModal} onHide={() => setShowModal(false)}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>Loan Terms & Conditions</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>\n//           <p>By applying for this loan, you agree to our terms and conditions...</p>\n//           {/* Add your actual terms here */}\n//         </Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n//             Close\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </div>\n//   );\n// };\n\n// export default LoanApplication;\n// import React, { useState, useEffect } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import { Button, Form, InputGroup } from 'react-bootstrap';\n// import { AiOutlineCheckCircle } from 'react-icons/ai';\n\n// const LoanApplication = () => {\n//   const [searchParams] = useSearchParams();\n//   const loanType = searchParams.get('type') || 'salary'; // Default to 'salary' if not specified.\n\n//   const [loanBreakdown, setLoanBreakdown] = useState({\n//     totalInterest: 0,\n//     totalPayable: 0,\n//     weeklyInstallment: 0,\n//   });\n\n//   const formik = useFormik({\n//     initialValues: {\n//       fullName: '',\n//       phoneNumber: '',\n//       idNumber: '',\n//       loanAmount: '',\n//       loanDuration: 5, // Default duration in weeks.\n//       payslips: null,\n//       bankStatement: null,\n//       businessCertificate: null,\n//       loanType: loanType, // Add loanType field for selection.\n//       referralCode: '',  // Referral code for \"refer a friend\"\n//       referralSource: '', // Where they heard about us\n//     },\n//     validationSchema: Yup.object({\n//       fullName: Yup.string().required('Full name is required'),\n//       phoneNumber: Yup.string().required('Phone number is required'),\n//       idNumber: Yup.string().required('ID number is required'),\n//       loanAmount: Yup.number()\n//         .min(500, 'Minimum loan amount is 500')\n//         .required('Loan amount is required'),\n//       loanDuration: Yup.number()\n//         .min(1, 'Minimum duration is 1 week')\n//         .max(5, 'Maximum duration is 5 weeks')\n//         .required('Loan duration is required'),\n//     }),\n//     onSubmit: (values) => {\n//       console.log('Form Submitted:', values);\n//       alert('Application submitted successfully!');\n//     },\n//   });\n\n//   const calculateLoanBreakdown = () => {\n//     const amount = parseFloat(formik.values.loanAmount || 0);\n//     const duration = parseInt(formik.values.loanDuration || 1, 10);\n//     const weeklyInterestRate = 0.05; // 5% weekly interest.\n\n//     const totalInterest = amount * weeklyInterestRate * duration;\n//     const totalPayable = amount + totalInterest;\n//     const weeklyInstallment = totalPayable / duration;\n\n//     setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n//   };\n\n//   useEffect(() => {\n//     calculateLoanBreakdown();\n//   }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Loan Application</h2>\n//       <p>Apply for a {loanType === 'salary' ? 'Salary Loan' : 'Business Loan'}.</p>\n\n//       <form\n//         onSubmit={formik.handleSubmit}\n//         className=\"mt-4\"\n//         onChange={calculateLoanBreakdown}\n//       >\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"fullName\" className=\"form-label\">Full Name</label>\n//           <input\n//             id=\"fullName\"\n//             name=\"fullName\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.fullName}\n//           />\n//           {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"phoneNumber\" className=\"form-label\">Phone Number</label>\n//           <input\n//             id=\"phoneNumber\"\n//             name=\"phoneNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.phoneNumber}\n//           />\n//           {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"idNumber\" className=\"form-label\">National ID/Passport</label>\n//           <input\n//             id=\"idNumber\"\n//             name=\"idNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.idNumber}\n//           />\n//           {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanAmount\" className=\"form-label\">Loan Amount</label>\n//           <input\n//             id=\"loanAmount\"\n//             name=\"loanAmount\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanAmount}\n//           />\n//           {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanDuration\" className=\"form-label\">Loan Duration (in weeks)</label>\n//           <input\n//             id=\"loanDuration\"\n//             name=\"loanDuration\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanDuration}\n//           />\n//           {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanType\" className=\"form-label\">Select Loan Type</label>\n//           <select\n//             id=\"loanType\"\n//             name=\"loanType\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanType}\n//           >\n//             <option value=\"salary\">Salary Loan</option>\n//             <option value=\"business\">Business Loan</option>\n//           </select>\n//         </div>\n\n//         {formik.values.loanType === 'salary' && (\n//           <>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"payslips\" className=\"form-label\">Upload Payslips</label>\n//               <input\n//                 id=\"payslips\"\n//                 name=\"payslips\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => formik.setFieldValue('payslips', e.target.files[0])}\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"bankStatement\" className=\"form-label\">Upload Bank Statement</label>\n//               <input\n//                 id=\"bankStatement\"\n//                 name=\"bankStatement\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => formik.setFieldValue('bankStatement', e.target.files[0])}\n//               />\n//             </div>\n//           </>\n//         )}\n\n//         {formik.values.loanType === 'business' && (\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"businessCertificate\" className=\"form-label\">Business Registration Certificate</label>\n//             <input\n//               id=\"businessCertificate\"\n//               name=\"businessCertificate\"\n//               type=\"file\"\n//               className=\"form-control\"\n//               onChange={(e) => formik.setFieldValue('businessCertificate', e.target.files[0])}\n//             />\n//           </div>\n//         )}\n\n//         {/* Refer a Friend Section */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"referralCode\" className=\"form-label\">Referral Code (Optional)</label>\n//           <input\n//             id=\"referralCode\"\n//             name=\"referralCode\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.referralCode}\n//           />\n//           <small className=\"form-text text-muted\">\n//             Refer a friend and receive a 3% reward upon successful application.\n//           </small>\n//         </div>\n\n//         {/* How did you hear about us Section */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"referralSource\" className=\"form-label\">How did you hear about us?</label>\n//           <select\n//             id=\"referralSource\"\n//             name=\"referralSource\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.referralSource}\n//           >\n//             <option value=\"\">Select an option</option>\n//             <option value=\"facebook\">Facebook</option>\n//             <option value=\"whatsapp\">WhatsApp</option>\n//             <option value=\"social_media\">Other Social Media</option>\n//             <option value=\"friend\">Friend/Referral</option>\n//             <option value=\"other\">Other</option>\n//           </select>\n//         </div>\n\n//         <h4 className=\"mt-4\">Loan Breakdown</h4>\n//         <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n//         <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n//         <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n//         <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n//           Submit Application <AiOutlineCheckCircle />\n//         </Button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // export default LoanApplication;\n// import React, { useState, useEffect } from 'react'; // Ensure these are imported\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import { Button, Form } from 'react-bootstrap'; // Removed unused imports\n// // import { AiOutlineInfoCircle } from 'react-icons/ai'; // Removed since it's not used\n// // import { Alert } from 'react-bootstrap'; // Removed since it's not used\n\n// const LoanApplication = () => {\n//   const [loanType, setLoanType] = useState('salary'); // Default loan type is salary\n//   const [loanBreakdown, setLoanBreakdown] = useState({\n//     totalInterest: 0,\n//     totalPayable: 0,\n//     weeklyInstallment: 0,\n//   });\n\n//   const formik = useFormik({\n//     initialValues: {\n//       fullName: '',\n//       phoneNumber: '',\n//       idNumber: '',\n//       loanAmount: '',\n//       loanDuration: 5, // Default duration in weeks\n//       loanType: 'salary',\n//       payslips: null,\n//       bankStatement: null,\n//       businessCertificate: null,\n//       referralSource: '',  // New field for how the user found out about the loan\n//       referAFriend: false,  // New field for refer a friend offer\n//     },\n//     validationSchema: Yup.object({\n//       fullName: Yup.string().required('Full name is required'),\n//       phoneNumber: Yup.string().required('Phone number is required'),\n//       idNumber: Yup.string().required('National ID/Passport is required'),\n//       loanAmount: Yup.number().min(500, 'Minimum loan amount is 500').required('Loan amount is required'),\n//       loanDuration: Yup.number().min(1, 'Duration must be between 1 to 5 weeks').max(5, 'Maximum duration is 5 weeks').required('Loan duration is required'),\n//     }),\n//     onSubmit: (values) => {\n//       console.log('Form Submitted:', values);\n//       alert(`Application submitted successfully for a ${values.loanType} loan!`);\n//     },\n//   });\n\n//   // Calculate loan breakdown\n//   useEffect(() => {\n//     const calculateLoanBreakdown = () => {\n//       const amount = parseFloat(formik.values.loanAmount || 0);\n//       const duration = parseInt(formik.values.loanDuration || 1, 10);\n//       const weeklyInterestRate = 0.05; // 5% weekly interest rate\n\n//       const totalInterest = amount * weeklyInterestRate * duration;\n//       const totalPayable = amount + totalInterest;\n//       const weeklyInstallment = totalPayable / duration;\n\n//       setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n//     };\n\n//     calculateLoanBreakdown();\n//   }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Loan Application</h2>\n//       <p>Apply for a loan by selecting the loan type below.</p>\n\n//       <Form onSubmit={formik.handleSubmit}>\n//         {/* Loan Type Selection */}\n//         <Form.Group controlId=\"loanType\">\n//           <Form.Label>Select Loan Type</Form.Label>\n//           <Form.Check\n//             type=\"radio\"\n//             label=\"Salary Loan\"\n//             name=\"loanType\"\n//             value=\"salary\"\n//             checked={loanType === 'salary'}\n//             onChange={(e) => setLoanType(e.target.value)}\n//           />\n//           <Form.Check\n//             type=\"radio\"\n//             label=\"Business Loan\"\n//             name=\"loanType\"\n//             value=\"business\"\n//             checked={loanType === 'business'}\n//             onChange={(e) => setLoanType(e.target.value)}\n//           />\n//         </Form.Group>\n\n//         {/* Full Name */}\n//         <Form.Group controlId=\"fullName\">\n//           <Form.Label>Full Name</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Enter your full name\"\n//             name=\"fullName\"\n//             onChange={formik.handleChange}\n//             value={formik.values.fullName}\n//           />\n//           {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n//         </Form.Group>\n\n//         {/* Phone Number */}\n//         <Form.Group controlId=\"phoneNumber\">\n//           <Form.Label>Phone Number</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Enter your phone number\"\n//             name=\"phoneNumber\"\n//             onChange={formik.handleChange}\n//             value={formik.values.phoneNumber}\n//           />\n//           {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n//         </Form.Group>\n\n//         {/* ID Number */}\n//         <Form.Group controlId=\"idNumber\">\n//           <Form.Label>National ID / Passport</Form.Label>\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Enter your National ID or Passport number\"\n//             name=\"idNumber\"\n//             onChange={formik.handleChange}\n//             value={formik.values.idNumber}\n//           />\n//           {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n//         </Form.Group>\n\n//         {/* Loan Amount */}\n//         <Form.Group controlId=\"loanAmount\">\n//           <Form.Label>Loan Amount</Form.Label>\n//           <Form.Control\n//             type=\"number\"\n//             placeholder=\"Enter loan amount\"\n//             name=\"loanAmount\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanAmount}\n//           />\n//           {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n//         </Form.Group>\n\n//         {/* Loan Duration */}\n//         <Form.Group controlId=\"loanDuration\">\n//           <Form.Label>Loan Duration (in weeks)</Form.Label>\n//           <Form.Control\n//             type=\"number\"\n//             placeholder=\"Enter loan duration\"\n//             name=\"loanDuration\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanDuration}\n//           />\n//           {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n//         </Form.Group>\n\n//         {/* Conditional File Uploads */}\n//         {loanType === 'salary' && (\n//           <>\n//             <Form.Group controlId=\"payslips\">\n//               <Form.Label>Upload Payslips</Form.Label>\n//               <Form.Control\n//                 type=\"file\"\n//                 name=\"payslips\"\n//                 onChange={(e) => formik.setFieldValue('payslips', e.target.files[0])}\n//               />\n//             </Form.Group>\n//             <Form.Group controlId=\"bankStatement\">\n//               <Form.Label>Upload Bank Statement</Form.Label>\n//               <Form.Control\n//                 type=\"file\"\n//                 name=\"bankStatement\"\n//                 onChange={(e) => formik.setFieldValue('bankStatement', e.target.files[0])}\n//               />\n//             </Form.Group>\n//           </>\n//         )}\n\n//         {loanType === 'business' && (\n//           <Form.Group controlId=\"businessCertificate\">\n//             <Form.Label>Business Registration Certificate</Form.Label>\n//             <Form.Control\n//               type=\"file\"\n//               name=\"businessCertificate\"\n//               onChange={(e) => formik.setFieldValue('businessCertificate', e.target.files[0])}\n//             />\n//           </Form.Group>\n//         )}\n\n//         {/* Referral Section */}\n//         <Form.Group controlId=\"referralSource\">\n//           <Form.Label>How did you hear about us?</Form.Label>\n//           <Form.Control\n//             as=\"select\"\n//             name=\"referralSource\"\n//             onChange={formik.handleChange}\n//             value={formik.values.referralSource}\n//           >\n//             <option value=\"\">Select an option</option>\n//             <option value=\"facebook\">Facebook</option>\n//             <option value=\"whatsapp\">WhatsApp</option>\n//             <option value=\"socialMedia\">Social Media</option>\n//             <option value=\"friend\">Friend</option>\n//             <option value=\"other\">Other</option>\n//           </Form.Control>\n//         </Form.Group>\n\n//         {/* Refer a Friend Checkbox */}\n//         <Form.Group controlId=\"referAFriend\">\n//           <Form.Check\n//             type=\"checkbox\"\n//             label=\"Refer a friend and get 3% off your loan!\"\n//             name=\"referAFriend\"\n//             onChange={formik.handleChange}\n//             checked={formik.values.referAFriend}\n//           />\n//         </Form.Group>\n\n//         {/* Loan Breakdown */}\n//         <h4 className=\"mt-4\">Loan Breakdown</h4>\n//         <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n//         <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n//         <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n//         {/* Submit Button */}\n//         <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">\n//           Submit Application\n//         </Button>\n//       </Form>\n//     </div>\n//   );\n// };\n\n// export default LoanApplication;\nimport React, { useState, useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Button, Form, Alert } from 'react-bootstrap';\nimport { AiOutlineInfoCircle } from 'react-icons/ai';\n\nconst LoanApplication = () => {\n  const [loanType, setLoanType] = useState('salary'); // Default loan type is salary\n  const [loanBreakdown, setLoanBreakdown] = useState({\n    totalInterest: 0,\n    totalPayable: 0,\n    weeklyInstallment: 0,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      fullName: '',\n      phoneNumber: '',\n      idNumber: '',\n      loanAmount: '',\n      loanDuration: 5, // Default duration in weeks\n      loanType: 'salary',\n      payslips: null,\n      bankStatement: null,\n      businessCertificate: null,\n    },\n    validationSchema: Yup.object({\n      fullName: Yup.string().required('Full name is required'),\n      phoneNumber: Yup.string().required('Phone number is required'),\n      idNumber: Yup.string().required('National ID/Passport is required'),\n      loanAmount: Yup.number().min(500, 'Minimum loan amount is 500').required('Loan amount is required'),\n      loanDuration: Yup.number().min(1, 'Duration must be between 1 to 5 weeks').max(5, 'Maximum duration is 5 weeks').required('Loan duration is required'),\n    }),\n    onSubmit: (values) => {\n      console.log('Form Submitted:', values);\n      alert(`Application submitted successfully for a ${values.loanType} loan!`);\n    },\n  });\n\n  // Calculate loan breakdown\n  useEffect(() => {\n    const calculateLoanBreakdown = () => {\n      const amount = parseFloat(formik.values.loanAmount || 0);\n      const duration = parseInt(formik.values.loanDuration || 1, 10);\n      const weeklyInterestRate = 0.05; // 5% weekly interest rate\n\n      const totalInterest = amount * weeklyInterestRate * duration;\n      const totalPayable = amount + totalInterest;\n      const weeklyInstallment = totalPayable / duration;\n\n      setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n    };\n\n    calculateLoanBreakdown();\n  }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n  return (\n    <div className=\"container mt-5\">\n      <h2>Loan Application</h2>\n      <p>Apply for a loan by selecting the loan type below.</p>\n\n      <Form onSubmit={formik.handleSubmit}>\n        {/* Loan Type Selection */}\n        <Form.Group controlId=\"loanType\">\n          <Form.Label>Select Loan Type</Form.Label>\n          <Form.Check\n            type=\"radio\"\n            label=\"Salary Loan\"\n            name=\"loanType\"\n            value=\"salary\"\n            checked={loanType === 'salary'}\n            onChange={(e) => setLoanType(e.target.value)}\n          />\n          <Form.Check\n            type=\"radio\"\n            label=\"Business Loan\"\n            name=\"loanType\"\n            value=\"business\"\n            checked={loanType === 'business'}\n            onChange={(e) => setLoanType(e.target.value)}\n          />\n        </Form.Group>\n\n        {/* Full Name */}\n        <Form.Group controlId=\"fullName\">\n          <Form.Label>Full Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter your full name\"\n            name=\"fullName\"\n            onChange={formik.handleChange}\n            value={formik.values.fullName}\n          />\n          {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n        </Form.Group>\n\n        {/* Phone Number */}\n        <Form.Group controlId=\"phoneNumber\">\n          <Form.Label>Phone Number</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter your phone number\"\n            name=\"phoneNumber\"\n            onChange={formik.handleChange}\n            value={formik.values.phoneNumber}\n          />\n          {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n        </Form.Group>\n\n        {/* ID Number */}\n        <Form.Group controlId=\"idNumber\">\n          <Form.Label>National ID / Passport</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter your National ID or Passport number\"\n            name=\"idNumber\"\n            onChange={formik.handleChange}\n            value={formik.values.idNumber}\n          />\n          {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n        </Form.Group>\n\n        {/* Loan Amount */}\n        <Form.Group controlId=\"loanAmount\">\n          <Form.Label>Loan Amount</Form.Label>\n          <Form.Control\n            type=\"number\"\n            placeholder=\"Enter loan amount\"\n            name=\"loanAmount\"\n            onChange={formik.handleChange}\n            value={formik.values.loanAmount}\n          />\n          {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n        </Form.Group>\n\n        {/* Loan Duration */}\n        <Form.Group controlId=\"loanDuration\">\n          <Form.Label>Loan Duration (in weeks)</Form.Label>\n          <Form.Control\n            type=\"number\"\n            placeholder=\"Enter loan duration\"\n            name=\"loanDuration\"\n            onChange={formik.handleChange}\n            value={formik.values.loanDuration}\n          />\n          {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n        </Form.Group>\n\n        {/* Conditional File Uploads */}\n        {loanType === 'salary' && (\n          <>\n            <Form.Group controlId=\"payslips\">\n              <Form.Label>Upload Payslips</Form.Label>\n              <Form.Control\n                type=\"file\"\n                name=\"payslips\"\n                onChange={(e) => formik.setFieldValue('payslips', e.target.files[0])}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"bankStatement\">\n              <Form.Label>Upload Bank Statement</Form.Label>\n              <Form.Control\n                type=\"file\"\n                name=\"bankStatement\"\n                onChange={(e) => formik.setFieldValue('bankStatement', e.target.files[0])}\n              />\n            </Form.Group>\n          </>\n        )}\n\n        {loanType === 'business' && (\n          <Form.Group controlId=\"businessCertificate\">\n            <Form.Label>Business Registration Certificate</Form.Label>\n            <Form.Control\n              type=\"file\"\n              name=\"businessCertificate\"\n              onChange={(e) => formik.setFieldValue('businessCertificate', e.target.files[0])}\n            />\n          </Form.Group>\n        )}\n\n        {/* Loan Breakdown */}\n        <h4 className=\"mt-4\">Loan Breakdown</h4>\n        <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n        <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n        <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n        {/* Submit Button */}\n        <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">\n          Submit Application\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default LoanApplication;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}