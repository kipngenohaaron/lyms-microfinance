{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n\n// const LoanApplication = () => {\n//   const [searchParams] = useSearchParams();\n//   const loanType = searchParams.get('type') || 'salary'; // Default to 'salary' if not specified.\n\n//   const [loanBreakdown, setLoanBreakdown] = useState({\n//     totalInterest: 0,\n//     totalPayable: 0,\n//     weeklyInstallment: 0,\n//   });\n\n//   const calculateLoanBreakdown = (amount, duration) => {\n//     const weeklyInterestRate = 0.05; // 5% weekly interest rate\n//     const totalInterest = amount * weeklyInterestRate * duration;\n//     const totalPayable = amount + totalInterest;\n//     const weeklyInstallment = totalPayable / duration;\n\n//     setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n//   };\n\n//   const formik = useFormik({\n//     initialValues: {\n//       loanType, // Automatically set based on URL parameter\n//       fullName: '',\n//       phoneNumber: '',\n//       idNumber: '',\n//       address: '',\n//       loanAmount: '',\n//       loanDuration: 5, // Default to 5 weeks\n//       employerName: '',\n//       businessName: '',\n//       payslips: null,\n//       bankStatement: null,\n//       businessCertificate: null,\n//     },\n//     validationSchema: Yup.object({\n//       fullName: Yup.string().required('Full name is required.'),\n//       phoneNumber: Yup.string()\n//         .matches(/^[0-9]+$/, 'Phone number must contain only digits.')\n//         .required('Phone number is required.'),\n//       idNumber: Yup.string().required('ID/Passport number is required.'),\n//       address: Yup.string().required('Address is required.'),\n//       loanAmount: Yup.number()\n//         .min(500, 'Minimum loan amount is 500 KES.')\n//         .required('Loan amount is required.'),\n//       loanDuration: Yup.number()\n//         .min(1, 'Minimum duration is 1 week.')\n//         .max(5, 'Maximum duration is 5 weeks.')\n//         .required('Loan duration is required.'),\n//       employerName: Yup.string().when('loanType', (loanType, schema) =>\n//         loanType === 'salary'\n//           ? schema.required('Employer name is required for salary loans.')\n//           : schema\n//       ),\n//       businessName: Yup.string().when('loanType', (loanType, schema) =>\n//         loanType === 'business'\n//           ? schema.required('Business name is required for business loans.')\n//           : schema\n//       ),\n//     }),\n//     onSubmit: (values) => {\n//       console.log('Form Submitted:', values);\n//       alert('Application submitted successfully!');\n//     },\n//   });\n\n//   const handleInputChange = (e) => {\n//     formik.handleChange(e);\n//     const { loanAmount, loanDuration } = formik.values;\n//     if (loanAmount && loanDuration) {\n//       calculateLoanBreakdown(parseFloat(loanAmount), parseInt(loanDuration, 10));\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Loan Application</h2>\n//       <p>Apply for a {loanType === 'salary' ? 'Salary Loan' : 'Business Loan'}.</p>\n\n//       <form onSubmit={formik.handleSubmit} className=\"mt-4\">\n//         {/* Loan Type Selector */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanType\" className=\"form-label\">Loan Type</label>\n//           <select\n//             id=\"loanType\"\n//             name=\"loanType\"\n//             className=\"form-control\"\n//             onChange={(e) => {\n//               formik.setFieldValue('loanType', e.target.value);\n//               formik.setFieldValue('employerName', '');\n//               formik.setFieldValue('businessName', '');\n//             }}\n//             value={formik.values.loanType}\n//           >\n//             <option value=\"salary\">Salary Loan</option>\n//             <option value=\"business\">Business Loan</option>\n//           </select>\n//         </div>\n\n//         {/* Personal Information */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"fullName\" className=\"form-label\">Full Name</label>\n//           <input\n//             id=\"fullName\"\n//             name=\"fullName\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={handleInputChange}\n//             value={formik.values.fullName}\n//           />\n//           {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"phoneNumber\" className=\"form-label\">Phone Number</label>\n//           <input\n//             id=\"phoneNumber\"\n//             name=\"phoneNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={handleInputChange}\n//             value={formik.values.phoneNumber}\n//           />\n//           {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"idNumber\" className=\"form-label\">ID/Passport Number</label>\n//           <input\n//             id=\"idNumber\"\n//             name=\"idNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={handleInputChange}\n//             value={formik.values.idNumber}\n//           />\n//           {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"address\" className=\"form-label\">Address</label>\n//           <input\n//             id=\"address\"\n//             name=\"address\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={handleInputChange}\n//             value={formik.values.address}\n//           />\n//           {formik.errors.address && <div className=\"text-danger\">{formik.errors.address}</div>}\n//         </div>\n\n//         {/* Loan Details */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanAmount\" className=\"form-label\">Loan Amount</label>\n//           <input\n//             id=\"loanAmount\"\n//             name=\"loanAmount\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={handleInputChange}\n//             value={formik.values.loanAmount}\n//           />\n//           {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanDuration\" className=\"form-label\">Loan Duration (weeks)</label>\n//           <input\n//             id=\"loanDuration\"\n//             name=\"loanDuration\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={handleInputChange}\n//             value={formik.values.loanDuration}\n//           />\n//           {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n//         </div>\n\n//         {/* Conditional Inputs */}\n//         {formik.values.loanType === 'salary' && (\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"employerName\" className=\"form-label\">Employer Name</label>\n//             <input\n//               id=\"employerName\"\n//               name=\"employerName\"\n//               type=\"text\"\n//               className=\"form-control\"\n//               onChange={handleInputChange}\n//               value={formik.values.employerName}\n//             />\n//             {formik.errors.employerName && (\n//               <div className=\"text-danger\">{formik.errors.employerName}</div>\n//             )}\n//           </div>\n//         )}\n\n//         {formik.values.loanType === 'business' && (\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"businessName\" className=\"form-label\">Business Name</label>\n//             <input\n//               id=\"businessName\"\n//               name=\"businessName\"\n//               type=\"text\"\n//               className=\"form-control\"\n//               onChange={handleInputChange}\n//               value={formik.values.businessName}\n//             />\n//             {formik.errors.businessName && (\n//               <div className=\"text-danger\">{formik.errors.businessName}</div>\n//             )}\n//           </div>\n//         )}\n\n//         {/* Loan Breakdown */}\n//         <h4 className=\"mt-4\">Loan Breakdown</h4>\n//         <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n//         <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n//         <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n//         <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit Application</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default LoanApplication;","map":{"version":3,"names":[],"sources":["/home/kipngenoh/Desktop/CODING SOLUTIONS/REACT_PROJECTS/lyms-microfinance/src/pages/LoanApplication.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n\n// const LoanApplication = () => {\n//   const [searchParams] = useSearchParams();\n//   const loanType = searchParams.get('type') || 'salary'; // Default to 'salary' if not specified.\n\n//   const [loanBreakdown, setLoanBreakdown] = useState({\n//     totalInterest: 0,\n//     totalPayable: 0,\n//     weeklyInstallment: 0,\n//   });\n\n//   const calculateLoanBreakdown = (amount, duration) => {\n//     const weeklyInterestRate = 0.05; // 5% weekly interest rate\n//     const totalInterest = amount * weeklyInterestRate * duration;\n//     const totalPayable = amount + totalInterest;\n//     const weeklyInstallment = totalPayable / duration;\n\n//     setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n//   };\n\n//   const formik = useFormik({\n//     initialValues: {\n//       loanType, // Automatically set based on URL parameter\n//       fullName: '',\n//       phoneNumber: '',\n//       idNumber: '',\n//       address: '',\n//       loanAmount: '',\n//       loanDuration: 5, // Default to 5 weeks\n//       employerName: '',\n//       businessName: '',\n//       payslips: null,\n//       bankStatement: null,\n//       businessCertificate: null,\n//     },\n//     validationSchema: Yup.object({\n//       fullName: Yup.string().required('Full name is required.'),\n//       phoneNumber: Yup.string()\n//         .matches(/^[0-9]+$/, 'Phone number must contain only digits.')\n//         .required('Phone number is required.'),\n//       idNumber: Yup.string().required('ID/Passport number is required.'),\n//       address: Yup.string().required('Address is required.'),\n//       loanAmount: Yup.number()\n//         .min(500, 'Minimum loan amount is 500 KES.')\n//         .required('Loan amount is required.'),\n//       loanDuration: Yup.number()\n//         .min(1, 'Minimum duration is 1 week.')\n//         .max(5, 'Maximum duration is 5 weeks.')\n//         .required('Loan duration is required.'),\n//       employerName: Yup.string().when('loanType', (loanType, schema) =>\n//         loanType === 'salary'\n//           ? schema.required('Employer name is required for salary loans.')\n//           : schema\n//       ),\n//       businessName: Yup.string().when('loanType', (loanType, schema) =>\n//         loanType === 'business'\n//           ? schema.required('Business name is required for business loans.')\n//           : schema\n//       ),\n//     }),\n//     onSubmit: (values) => {\n//       console.log('Form Submitted:', values);\n//       alert('Application submitted successfully!');\n//     },\n//   });\n\n//   const handleInputChange = (e) => {\n//     formik.handleChange(e);\n//     const { loanAmount, loanDuration } = formik.values;\n//     if (loanAmount && loanDuration) {\n//       calculateLoanBreakdown(parseFloat(loanAmount), parseInt(loanDuration, 10));\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Loan Application</h2>\n//       <p>Apply for a {loanType === 'salary' ? 'Salary Loan' : 'Business Loan'}.</p>\n\n//       <form onSubmit={formik.handleSubmit} className=\"mt-4\">\n//         {/* Loan Type Selector */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanType\" className=\"form-label\">Loan Type</label>\n//           <select\n//             id=\"loanType\"\n//             name=\"loanType\"\n//             className=\"form-control\"\n//             onChange={(e) => {\n//               formik.setFieldValue('loanType', e.target.value);\n//               formik.setFieldValue('employerName', '');\n//               formik.setFieldValue('businessName', '');\n//             }}\n//             value={formik.values.loanType}\n//           >\n//             <option value=\"salary\">Salary Loan</option>\n//             <option value=\"business\">Business Loan</option>\n//           </select>\n//         </div>\n\n//         {/* Personal Information */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"fullName\" className=\"form-label\">Full Name</label>\n//           <input\n//             id=\"fullName\"\n//             name=\"fullName\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={handleInputChange}\n//             value={formik.values.fullName}\n//           />\n//           {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"phoneNumber\" className=\"form-label\">Phone Number</label>\n//           <input\n//             id=\"phoneNumber\"\n//             name=\"phoneNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={handleInputChange}\n//             value={formik.values.phoneNumber}\n//           />\n//           {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"idNumber\" className=\"form-label\">ID/Passport Number</label>\n//           <input\n//             id=\"idNumber\"\n//             name=\"idNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={handleInputChange}\n//             value={formik.values.idNumber}\n//           />\n//           {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"address\" className=\"form-label\">Address</label>\n//           <input\n//             id=\"address\"\n//             name=\"address\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={handleInputChange}\n//             value={formik.values.address}\n//           />\n//           {formik.errors.address && <div className=\"text-danger\">{formik.errors.address}</div>}\n//         </div>\n\n//         {/* Loan Details */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanAmount\" className=\"form-label\">Loan Amount</label>\n//           <input\n//             id=\"loanAmount\"\n//             name=\"loanAmount\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={handleInputChange}\n//             value={formik.values.loanAmount}\n//           />\n//           {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanDuration\" className=\"form-label\">Loan Duration (weeks)</label>\n//           <input\n//             id=\"loanDuration\"\n//             name=\"loanDuration\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={handleInputChange}\n//             value={formik.values.loanDuration}\n//           />\n//           {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n//         </div>\n\n//         {/* Conditional Inputs */}\n//         {formik.values.loanType === 'salary' && (\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"employerName\" className=\"form-label\">Employer Name</label>\n//             <input\n//               id=\"employerName\"\n//               name=\"employerName\"\n//               type=\"text\"\n//               className=\"form-control\"\n//               onChange={handleInputChange}\n//               value={formik.values.employerName}\n//             />\n//             {formik.errors.employerName && (\n//               <div className=\"text-danger\">{formik.errors.employerName}</div>\n//             )}\n//           </div>\n//         )}\n\n//         {formik.values.loanType === 'business' && (\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"businessName\" className=\"form-label\">Business Name</label>\n//             <input\n//               id=\"businessName\"\n//               name=\"businessName\"\n//               type=\"text\"\n//               className=\"form-control\"\n//               onChange={handleInputChange}\n//               value={formik.values.businessName}\n//             />\n//             {formik.errors.businessName && (\n//               <div className=\"text-danger\">{formik.errors.businessName}</div>\n//             )}\n//           </div>\n//         )}\n\n//         {/* Loan Breakdown */}\n//         <h4 className=\"mt-4\">Loan Breakdown</h4>\n//         <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n//         <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n//         <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n//         <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit Application</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default LoanApplication;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}