{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import { Tooltip, Button, Modal } from 'react-bootstrap';\n// import { AiOutlineInfoCircle } from 'react-icons/ai'; // Add icon for loan type\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const LoanApplication = () => {\n//   const [searchParams] = useSearchParams();\n//   const loanType = searchParams.get('type') || 'salary'; // Default to 'salary' if not specified\n\n//   const [loanBreakdown, setLoanBreakdown] = useState({\n//     totalInterest: 0,\n//     totalPayable: 0,\n//     weeklyInstallment: 0,\n//   });\n\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Formik setup for form validation\n//   const formik = useFormik({\n//     initialValues: {\n//       fullName: '',\n//       phoneNumber: '',\n//       idNumber: '',\n//       loanAmount: '',\n//       loanDuration: 5, // Default duration in weeks\n//       payslips: null,\n//       bankStatement: null,\n//       businessCertificate: null,\n//     },\n//     validationSchema: Yup.object({\n//       fullName: Yup.string().required('Full name is required'),\n//       phoneNumber: Yup.string().required('Phone number is required'),\n//       idNumber: Yup.string().required('ID number is required'),\n//       loanAmount: Yup.number()\n//         .min(500, 'Minimum loan amount is 500 KES')\n//         .required('Loan amount is required'),\n//       loanDuration: Yup.number()\n//         .min(1, 'Minimum duration is 1 week')\n//         .max(5, 'Maximum duration is 5 weeks')\n//         .required('Loan duration is required'),\n//     }),\n//     onSubmit: (values) => {\n//       console.log('Form Submitted:', values);\n//       alert('Your application has been successfully submitted!');\n//     },\n//   });\n\n//   // Calculate loan breakdown (interest, total repayable, weekly installment)\n//   const calculateLoanBreakdown = () => {\n//     const amount = parseFloat(formik.values.loanAmount || 0);\n//     const duration = parseInt(formik.values.loanDuration || 1, 10);\n//     const weeklyInterestRate = 0.05; // 5% weekly interest rate\n\n//     const totalInterest = amount * weeklyInterestRate * duration;\n//     const totalPayable = amount + totalInterest;\n//     const weeklyInstallment = totalPayable / duration;\n\n//     setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n//   };\n\n//   useEffect(() => {\n//     calculateLoanBreakdown(); // Recalculate breakdown when form values change\n//   }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n//   // Function to handle document preview\n//   const handleFileUpload = (e, fieldName) => {\n//     const file = e.target.files[0];\n//     formik.setFieldValue(fieldName, file);\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Loan Application</h2>\n//       <p>Apply for a {loanType === 'salary' ? 'Salary Loan' : 'Business Loan'}.</p>\n\n//       <form onSubmit={formik.handleSubmit} className=\"mt-4\">\n//         {/* Full Name */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"fullName\" className=\"form-label\">Full Name</label>\n//           <input\n//             id=\"fullName\"\n//             name=\"fullName\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.fullName}\n//           />\n//           {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n//         </div>\n\n//         {/* Phone Number */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"phoneNumber\" className=\"form-label\">Phone Number</label>\n//           <input\n//             id=\"phoneNumber\"\n//             name=\"phoneNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.phoneNumber}\n//           />\n//           {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n//         </div>\n\n//         {/* National ID / Passport */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"idNumber\" className=\"form-label\">National ID/Passport</label>\n//           <input\n//             id=\"idNumber\"\n//             name=\"idNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.idNumber}\n//           />\n//           {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n//         </div>\n\n//         {/* Loan Amount */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanAmount\" className=\"form-label\">Loan Amount</label>\n//           <input\n//             id=\"loanAmount\"\n//             name=\"loanAmount\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanAmount}\n//           />\n//           {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n//         </div>\n\n//         {/* Loan Duration */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanDuration\" className=\"form-label\">Loan Duration (in weeks)</label>\n//           <input\n//             id=\"loanDuration\"\n//             name=\"loanDuration\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanDuration}\n//           />\n//           {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n//         </div>\n\n//         {/* Conditional File Uploads */}\n//         {loanType === 'salary' && (\n//           <>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"payslips\" className=\"form-label\">Upload Payslips</label>\n//               <input\n//                 id=\"payslips\"\n//                 name=\"payslips\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => handleFileUpload(e, 'payslips')}\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"bankStatement\" className=\"form-label\">Upload Bank Statement</label>\n//               <input\n//                 id=\"bankStatement\"\n//                 name=\"bankStatement\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => handleFileUpload(e, 'bankStatement')}\n//               />\n//             </div>\n//           </>\n//         )}\n\n//         {loanType === 'business' && (\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"businessCertificate\" className=\"form-label\">Business Registration Certificate</label>\n//             <input\n//               id=\"businessCertificate\"\n//               name=\"businessCertificate\"\n//               type=\"file\"\n//               className=\"form-control\"\n//               onChange={(e) => handleFileUpload(e, 'businessCertificate')}\n//             />\n//           </div>\n//         )}\n\n//         {/* Loan Breakdown */}\n//         <h4 className=\"mt-4\">Loan Breakdown</h4>\n//         <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n//         <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n//         <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n//         {/* Submit Button */}\n//         <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit Application</button>\n\n//         {/* Tooltip Info for Loan Type */}\n//         <div className=\"mt-3\">\n//           <Tooltip placement=\"top\" title=\"Choose the loan type depending on your application\">\n//             <AiOutlineInfoCircle size={25} />\n//           </Tooltip>\n//         </div>\n//       </form>\n\n//       {/* Modal for Terms & Conditions */}\n//       <Modal show={showModal} onHide={() => setShowModal(false)}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>Loan Terms & Conditions</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>\n//           <p>By applying for this loan, you agree to our terms and conditions...</p>\n//           {/* Add your actual terms here */}\n//         </Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n//             Close\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </div>\n//   );\n// };\n\n// export default LoanApplication;\n// import React, { useState, useEffect } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import { Button, Form, InputGroup } from 'react-bootstrap';\n// import { AiOutlineCheckCircle } from 'react-icons/ai';\n\n// const LoanApplication = () => {\n//   const [searchParams] = useSearchParams();\n//   const loanType = searchParams.get('type') || 'salary'; // Default to 'salary' if not specified.\n\n//   const [loanBreakdown, setLoanBreakdown] = useState({\n//     totalInterest: 0,\n//     totalPayable: 0,\n//     weeklyInstallment: 0,\n//   });\n\n//   const formik = useFormik({\n//     initialValues: {\n//       fullName: '',\n//       phoneNumber: '',\n//       idNumber: '',\n//       loanAmount: '',\n//       loanDuration: 5, // Default duration in weeks.\n//       payslips: null,\n//       bankStatement: null,\n//       businessCertificate: null,\n//       loanType: loanType, // Add loanType field for selection.\n//       referralCode: '',  // Referral code for \"refer a friend\"\n//       referralSource: '', // Where they heard about us\n//     },\n//     validationSchema: Yup.object({\n//       fullName: Yup.string().required('Full name is required'),\n//       phoneNumber: Yup.string().required('Phone number is required'),\n//       idNumber: Yup.string().required('ID number is required'),\n//       loanAmount: Yup.number()\n//         .min(500, 'Minimum loan amount is 500')\n//         .required('Loan amount is required'),\n//       loanDuration: Yup.number()\n//         .min(1, 'Minimum duration is 1 week')\n//         .max(5, 'Maximum duration is 5 weeks')\n//         .required('Loan duration is required'),\n//     }),\n//     onSubmit: (values) => {\n//       console.log('Form Submitted:', values);\n//       alert('Application submitted successfully!');\n//     },\n//   });\n\n//   const calculateLoanBreakdown = () => {\n//     const amount = parseFloat(formik.values.loanAmount || 0);\n//     const duration = parseInt(formik.values.loanDuration || 1, 10);\n//     const weeklyInterestRate = 0.05; // 5% weekly interest.\n\n//     const totalInterest = amount * weeklyInterestRate * duration;\n//     const totalPayable = amount + totalInterest;\n//     const weeklyInstallment = totalPayable / duration;\n\n//     setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n//   };\n\n//   useEffect(() => {\n//     calculateLoanBreakdown();\n//   }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Loan Application</h2>\n//       <p>Apply for a {loanType === 'salary' ? 'Salary Loan' : 'Business Loan'}.</p>\n\n//       <form\n//         onSubmit={formik.handleSubmit}\n//         className=\"mt-4\"\n//         onChange={calculateLoanBreakdown}\n//       >\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"fullName\" className=\"form-label\">Full Name</label>\n//           <input\n//             id=\"fullName\"\n//             name=\"fullName\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.fullName}\n//           />\n//           {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"phoneNumber\" className=\"form-label\">Phone Number</label>\n//           <input\n//             id=\"phoneNumber\"\n//             name=\"phoneNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.phoneNumber}\n//           />\n//           {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"idNumber\" className=\"form-label\">National ID/Passport</label>\n//           <input\n//             id=\"idNumber\"\n//             name=\"idNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.idNumber}\n//           />\n//           {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanAmount\" className=\"form-label\">Loan Amount</label>\n//           <input\n//             id=\"loanAmount\"\n//             name=\"loanAmount\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanAmount}\n//           />\n//           {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanDuration\" className=\"form-label\">Loan Duration (in weeks)</label>\n//           <input\n//             id=\"loanDuration\"\n//             name=\"loanDuration\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanDuration}\n//           />\n//           {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanType\" className=\"form-label\">Select Loan Type</label>\n//           <select\n//             id=\"loanType\"\n//             name=\"loanType\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanType}\n//           >\n//             <option value=\"salary\">Salary Loan</option>\n//             <option value=\"business\">Business Loan</option>\n//           </select>\n//         </div>\n\n//         {formik.values.loanType === 'salary' && (\n//           <>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"payslips\" className=\"form-label\">Upload Payslips</label>\n//               <input\n//                 id=\"payslips\"\n//                 name=\"payslips\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => formik.setFieldValue('payslips', e.target.files[0])}\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"bankStatement\" className=\"form-label\">Upload Bank Statement</label>\n//               <input\n//                 id=\"bankStatement\"\n//                 name=\"bankStatement\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => formik.setFieldValue('bankStatement', e.target.files[0])}\n//               />\n//             </div>\n//           </>\n//         )}\n\n//         {formik.values.loanType === 'business' && (\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"businessCertificate\" className=\"form-label\">Business Registration Certificate</label>\n//             <input\n//               id=\"businessCertificate\"\n//               name=\"businessCertificate\"\n//               type=\"file\"\n//               className=\"form-control\"\n//               onChange={(e) => formik.setFieldValue('businessCertificate', e.target.files[0])}\n//             />\n//           </div>\n//         )}\n\n//         {/* Refer a Friend Section */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"referralCode\" className=\"form-label\">Referral Code (Optional)</label>\n//           <input\n//             id=\"referralCode\"\n//             name=\"referralCode\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.referralCode}\n//           />\n//           <small className=\"form-text text-muted\">\n//             Refer a friend and receive a 3% reward upon successful application.\n//           </small>\n//         </div>\n\n//         {/* How did you hear about us Section */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"referralSource\" className=\"form-label\">How did you hear about us?</label>\n//           <select\n//             id=\"referralSource\"\n//             name=\"referralSource\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.referralSource}\n//           >\n//             <option value=\"\">Select an option</option>\n//             <option value=\"facebook\">Facebook</option>\n//             <option value=\"whatsapp\">WhatsApp</option>\n//             <option value=\"social_media\">Other Social Media</option>\n//             <option value=\"friend\">Friend/Referral</option>\n//             <option value=\"other\">Other</option>\n//           </select>\n//         </div>\n\n//         <h4 className=\"mt-4\">Loan Breakdown</h4>\n//         <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n//         <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n//         <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n//         <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n//           Submit Application <AiOutlineCheckCircle />\n//         </Button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default LoanApplication;","map":{"version":3,"names":[],"sources":["/home/kipngenoh/Desktop/CODING SOLUTIONS/REACT_PROJECTS/lyms-microfinance/src/pages/LoanApplication.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import { Tooltip, Button, Modal } from 'react-bootstrap';\n// import { AiOutlineInfoCircle } from 'react-icons/ai'; // Add icon for loan type\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const LoanApplication = () => {\n//   const [searchParams] = useSearchParams();\n//   const loanType = searchParams.get('type') || 'salary'; // Default to 'salary' if not specified\n\n//   const [loanBreakdown, setLoanBreakdown] = useState({\n//     totalInterest: 0,\n//     totalPayable: 0,\n//     weeklyInstallment: 0,\n//   });\n\n//   const [showModal, setShowModal] = useState(false);\n\n//   // Formik setup for form validation\n//   const formik = useFormik({\n//     initialValues: {\n//       fullName: '',\n//       phoneNumber: '',\n//       idNumber: '',\n//       loanAmount: '',\n//       loanDuration: 5, // Default duration in weeks\n//       payslips: null,\n//       bankStatement: null,\n//       businessCertificate: null,\n//     },\n//     validationSchema: Yup.object({\n//       fullName: Yup.string().required('Full name is required'),\n//       phoneNumber: Yup.string().required('Phone number is required'),\n//       idNumber: Yup.string().required('ID number is required'),\n//       loanAmount: Yup.number()\n//         .min(500, 'Minimum loan amount is 500 KES')\n//         .required('Loan amount is required'),\n//       loanDuration: Yup.number()\n//         .min(1, 'Minimum duration is 1 week')\n//         .max(5, 'Maximum duration is 5 weeks')\n//         .required('Loan duration is required'),\n//     }),\n//     onSubmit: (values) => {\n//       console.log('Form Submitted:', values);\n//       alert('Your application has been successfully submitted!');\n//     },\n//   });\n\n//   // Calculate loan breakdown (interest, total repayable, weekly installment)\n//   const calculateLoanBreakdown = () => {\n//     const amount = parseFloat(formik.values.loanAmount || 0);\n//     const duration = parseInt(formik.values.loanDuration || 1, 10);\n//     const weeklyInterestRate = 0.05; // 5% weekly interest rate\n\n//     const totalInterest = amount * weeklyInterestRate * duration;\n//     const totalPayable = amount + totalInterest;\n//     const weeklyInstallment = totalPayable / duration;\n\n//     setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n//   };\n\n//   useEffect(() => {\n//     calculateLoanBreakdown(); // Recalculate breakdown when form values change\n//   }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n//   // Function to handle document preview\n//   const handleFileUpload = (e, fieldName) => {\n//     const file = e.target.files[0];\n//     formik.setFieldValue(fieldName, file);\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Loan Application</h2>\n//       <p>Apply for a {loanType === 'salary' ? 'Salary Loan' : 'Business Loan'}.</p>\n\n//       <form onSubmit={formik.handleSubmit} className=\"mt-4\">\n//         {/* Full Name */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"fullName\" className=\"form-label\">Full Name</label>\n//           <input\n//             id=\"fullName\"\n//             name=\"fullName\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.fullName}\n//           />\n//           {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n//         </div>\n\n//         {/* Phone Number */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"phoneNumber\" className=\"form-label\">Phone Number</label>\n//           <input\n//             id=\"phoneNumber\"\n//             name=\"phoneNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.phoneNumber}\n//           />\n//           {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n//         </div>\n\n//         {/* National ID / Passport */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"idNumber\" className=\"form-label\">National ID/Passport</label>\n//           <input\n//             id=\"idNumber\"\n//             name=\"idNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.idNumber}\n//           />\n//           {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n//         </div>\n\n//         {/* Loan Amount */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanAmount\" className=\"form-label\">Loan Amount</label>\n//           <input\n//             id=\"loanAmount\"\n//             name=\"loanAmount\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanAmount}\n//           />\n//           {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n//         </div>\n\n//         {/* Loan Duration */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanDuration\" className=\"form-label\">Loan Duration (in weeks)</label>\n//           <input\n//             id=\"loanDuration\"\n//             name=\"loanDuration\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanDuration}\n//           />\n//           {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n//         </div>\n\n//         {/* Conditional File Uploads */}\n//         {loanType === 'salary' && (\n//           <>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"payslips\" className=\"form-label\">Upload Payslips</label>\n//               <input\n//                 id=\"payslips\"\n//                 name=\"payslips\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => handleFileUpload(e, 'payslips')}\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"bankStatement\" className=\"form-label\">Upload Bank Statement</label>\n//               <input\n//                 id=\"bankStatement\"\n//                 name=\"bankStatement\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => handleFileUpload(e, 'bankStatement')}\n//               />\n//             </div>\n//           </>\n//         )}\n\n//         {loanType === 'business' && (\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"businessCertificate\" className=\"form-label\">Business Registration Certificate</label>\n//             <input\n//               id=\"businessCertificate\"\n//               name=\"businessCertificate\"\n//               type=\"file\"\n//               className=\"form-control\"\n//               onChange={(e) => handleFileUpload(e, 'businessCertificate')}\n//             />\n//           </div>\n//         )}\n\n//         {/* Loan Breakdown */}\n//         <h4 className=\"mt-4\">Loan Breakdown</h4>\n//         <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n//         <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n//         <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n//         {/* Submit Button */}\n//         <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit Application</button>\n\n//         {/* Tooltip Info for Loan Type */}\n//         <div className=\"mt-3\">\n//           <Tooltip placement=\"top\" title=\"Choose the loan type depending on your application\">\n//             <AiOutlineInfoCircle size={25} />\n//           </Tooltip>\n//         </div>\n//       </form>\n\n//       {/* Modal for Terms & Conditions */}\n//       <Modal show={showModal} onHide={() => setShowModal(false)}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>Loan Terms & Conditions</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>\n//           <p>By applying for this loan, you agree to our terms and conditions...</p>\n//           {/* Add your actual terms here */}\n//         </Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n//             Close\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </div>\n//   );\n// };\n\n// export default LoanApplication;\n// import React, { useState, useEffect } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n// import { Button, Form, InputGroup } from 'react-bootstrap';\n// import { AiOutlineCheckCircle } from 'react-icons/ai';\n\n// const LoanApplication = () => {\n//   const [searchParams] = useSearchParams();\n//   const loanType = searchParams.get('type') || 'salary'; // Default to 'salary' if not specified.\n\n//   const [loanBreakdown, setLoanBreakdown] = useState({\n//     totalInterest: 0,\n//     totalPayable: 0,\n//     weeklyInstallment: 0,\n//   });\n\n//   const formik = useFormik({\n//     initialValues: {\n//       fullName: '',\n//       phoneNumber: '',\n//       idNumber: '',\n//       loanAmount: '',\n//       loanDuration: 5, // Default duration in weeks.\n//       payslips: null,\n//       bankStatement: null,\n//       businessCertificate: null,\n//       loanType: loanType, // Add loanType field for selection.\n//       referralCode: '',  // Referral code for \"refer a friend\"\n//       referralSource: '', // Where they heard about us\n//     },\n//     validationSchema: Yup.object({\n//       fullName: Yup.string().required('Full name is required'),\n//       phoneNumber: Yup.string().required('Phone number is required'),\n//       idNumber: Yup.string().required('ID number is required'),\n//       loanAmount: Yup.number()\n//         .min(500, 'Minimum loan amount is 500')\n//         .required('Loan amount is required'),\n//       loanDuration: Yup.number()\n//         .min(1, 'Minimum duration is 1 week')\n//         .max(5, 'Maximum duration is 5 weeks')\n//         .required('Loan duration is required'),\n//     }),\n//     onSubmit: (values) => {\n//       console.log('Form Submitted:', values);\n//       alert('Application submitted successfully!');\n//     },\n//   });\n\n//   const calculateLoanBreakdown = () => {\n//     const amount = parseFloat(formik.values.loanAmount || 0);\n//     const duration = parseInt(formik.values.loanDuration || 1, 10);\n//     const weeklyInterestRate = 0.05; // 5% weekly interest.\n\n//     const totalInterest = amount * weeklyInterestRate * duration;\n//     const totalPayable = amount + totalInterest;\n//     const weeklyInstallment = totalPayable / duration;\n\n//     setLoanBreakdown({ totalInterest, totalPayable, weeklyInstallment });\n//   };\n\n//   useEffect(() => {\n//     calculateLoanBreakdown();\n//   }, [formik.values.loanAmount, formik.values.loanDuration]);\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2>Loan Application</h2>\n//       <p>Apply for a {loanType === 'salary' ? 'Salary Loan' : 'Business Loan'}.</p>\n\n//       <form\n//         onSubmit={formik.handleSubmit}\n//         className=\"mt-4\"\n//         onChange={calculateLoanBreakdown}\n//       >\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"fullName\" className=\"form-label\">Full Name</label>\n//           <input\n//             id=\"fullName\"\n//             name=\"fullName\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.fullName}\n//           />\n//           {formik.errors.fullName && <div className=\"text-danger\">{formik.errors.fullName}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"phoneNumber\" className=\"form-label\">Phone Number</label>\n//           <input\n//             id=\"phoneNumber\"\n//             name=\"phoneNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.phoneNumber}\n//           />\n//           {formik.errors.phoneNumber && <div className=\"text-danger\">{formik.errors.phoneNumber}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"idNumber\" className=\"form-label\">National ID/Passport</label>\n//           <input\n//             id=\"idNumber\"\n//             name=\"idNumber\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.idNumber}\n//           />\n//           {formik.errors.idNumber && <div className=\"text-danger\">{formik.errors.idNumber}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanAmount\" className=\"form-label\">Loan Amount</label>\n//           <input\n//             id=\"loanAmount\"\n//             name=\"loanAmount\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanAmount}\n//           />\n//           {formik.errors.loanAmount && <div className=\"text-danger\">{formik.errors.loanAmount}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanDuration\" className=\"form-label\">Loan Duration (in weeks)</label>\n//           <input\n//             id=\"loanDuration\"\n//             name=\"loanDuration\"\n//             type=\"number\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanDuration}\n//           />\n//           {formik.errors.loanDuration && <div className=\"text-danger\">{formik.errors.loanDuration}</div>}\n//         </div>\n\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"loanType\" className=\"form-label\">Select Loan Type</label>\n//           <select\n//             id=\"loanType\"\n//             name=\"loanType\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.loanType}\n//           >\n//             <option value=\"salary\">Salary Loan</option>\n//             <option value=\"business\">Business Loan</option>\n//           </select>\n//         </div>\n\n//         {formik.values.loanType === 'salary' && (\n//           <>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"payslips\" className=\"form-label\">Upload Payslips</label>\n//               <input\n//                 id=\"payslips\"\n//                 name=\"payslips\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => formik.setFieldValue('payslips', e.target.files[0])}\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"bankStatement\" className=\"form-label\">Upload Bank Statement</label>\n//               <input\n//                 id=\"bankStatement\"\n//                 name=\"bankStatement\"\n//                 type=\"file\"\n//                 className=\"form-control\"\n//                 onChange={(e) => formik.setFieldValue('bankStatement', e.target.files[0])}\n//               />\n//             </div>\n//           </>\n//         )}\n\n//         {formik.values.loanType === 'business' && (\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"businessCertificate\" className=\"form-label\">Business Registration Certificate</label>\n//             <input\n//               id=\"businessCertificate\"\n//               name=\"businessCertificate\"\n//               type=\"file\"\n//               className=\"form-control\"\n//               onChange={(e) => formik.setFieldValue('businessCertificate', e.target.files[0])}\n//             />\n//           </div>\n//         )}\n\n//         {/* Refer a Friend Section */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"referralCode\" className=\"form-label\">Referral Code (Optional)</label>\n//           <input\n//             id=\"referralCode\"\n//             name=\"referralCode\"\n//             type=\"text\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.referralCode}\n//           />\n//           <small className=\"form-text text-muted\">\n//             Refer a friend and receive a 3% reward upon successful application.\n//           </small>\n//         </div>\n\n//         {/* How did you hear about us Section */}\n//         <div className=\"mb-3\">\n//           <label htmlFor=\"referralSource\" className=\"form-label\">How did you hear about us?</label>\n//           <select\n//             id=\"referralSource\"\n//             name=\"referralSource\"\n//             className=\"form-control\"\n//             onChange={formik.handleChange}\n//             value={formik.values.referralSource}\n//           >\n//             <option value=\"\">Select an option</option>\n//             <option value=\"facebook\">Facebook</option>\n//             <option value=\"whatsapp\">WhatsApp</option>\n//             <option value=\"social_media\">Other Social Media</option>\n//             <option value=\"friend\">Friend/Referral</option>\n//             <option value=\"other\">Other</option>\n//           </select>\n//         </div>\n\n//         <h4 className=\"mt-4\">Loan Breakdown</h4>\n//         <p><strong>Total Interest:</strong> KES {loanBreakdown.totalInterest.toFixed(2)}</p>\n//         <p><strong>Total Payable:</strong> KES {loanBreakdown.totalPayable.toFixed(2)}</p>\n//         <p><strong>Weekly Installment:</strong> KES {loanBreakdown.weeklyInstallment.toFixed(2)}</p>\n\n//         <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n//           Submit Application <AiOutlineCheckCircle />\n//         </Button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default LoanApplication;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}